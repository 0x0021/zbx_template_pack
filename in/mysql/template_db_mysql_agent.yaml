---
templates:
  - name: Template DB MySQL by Zabbix agent
    _zbx_ver: "4.2"
    _classes:
      - DB
    _documentation:
      _tested_on:
        - name: MySQL
          version: 5.7, 8.0
        - name: Percona
          version: "8.0"
        - name: MariaDB
          version: "10.4"
        - name: Zabbix
          version: 4.2.1
      _zabbix_forum_url: https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/384189-discussion-thread-for-official-zabbix-template-db-mysql
      _overview: |-
        The template is developed for monitoring DBMS MySQL and its forks.
      # This template was tested with Zabbix 4.2.1 and MySQL 5.7, 8.0, Percona 8.0, MariaDB 10.4 on Linux and Windows.
      _setup: |-
        1. Install Zabbix agent and MySQL client. If necessary, add the path to the `mysql` and `mysqladmin` utilities to the global environment variable PATH.
        2. Copy `template_db_mysql.conf` into folder with Zabbix agent configuration (`/etc/zabbix/zabbix_agentd.d/` by default). Don't forget to restart zabbix-agent.
        3. Create MySQL user for monitoring (`<password>` at your discretion):

        ```text
        CREATE USER 'zbx_monitor'@'%' IDENTIFIED BY '<password>';
        GRANT USAGE,REPLICATION CLIENT,PROCESS,SHOW DATABASES,SHOW VIEW ON *.* TO 'zbx_monitor'@'%';
        ```

        For more information please read the MYSQL documentation https://dev.mysql.com/doc/refman/8.0/en/grant.html

        4. Create `.my.cnf` in home directory of Zabbix agent for Linux (`/var/lib/zabbix` by default ) or `my.cnf` in c:\ for Windows. The file must have three strings:

        ```text
        [client]
        user=zbx_monitor
        password=<password>
        ```
    description: |
      Requirements for template operation:
      1.Install Zabbix agent and MySQL client.
      2.Copy Template_DB_MySQL.conf into folder with Zabbix agent configuration (/etc/zabbix/zabbix_agentd.d/ by default). Don't forget restart zabbix-agent. 
      3.Create MySQL user for monitoring. For example:
      CREATE USER 'zbx_monitor'@'%' IDENTIFIED BY '<password>';
      GRANT USAGE,REPLICATION CLIENT,PROCESS,SHOW DATABASES,SHOW VIEW ON *.* TO 'zbx_monitor'@'%';
      For more information read the MYSQL documentation https://dev.mysql.com/doc/refman/8.0/en/grant.html , please. 
      4.Create .my.cnf in home directory of Zabbix agent for Linux (/var/lib/zabbix by default ) or my.cnf in c:\ for Windows. For example:
      [client]
      user=zbx_monitor
      password=<password>
    macros:
      - macro: "{$MYSQL.ABORTED_CONN.MAX.WARN}"
        _description: The number of failed attempts to connect to the MySQL server for trigger expression.
        value: "3"
      - macro: "{$MYSQL.HOST}"
        _description: Hostname or IP of MySQL host or container.
        value: "localhost"
      - macro: "{$MYSQL.PORT}"
        _description: MySQL service port.
        value: "3306"
      - macro: "{$MYSQL.REPL_LAG.MAX.WARN}"
        _description: The lag of slave from master for trigger expression.
        value: "30m"
      - macro: "{$MYSQL.SLOW_QUERIES.MAX.WARN}"
        _description: The number of slow queries for trigger expression.
        value: "3"
    items:
      - _prototype: mysql.get_status_variables
        type: ZABBIX_PASSIVE
        key: mysql.get_status_variables["{$MYSQL.HOST}","{$MYSQL.PORT}"]
      - _prototype: mysql.ping
        type: ZABBIX_PASSIVE
        key: mysql.ping["{$MYSQL.HOST}","{$MYSQL.PORT}"]
      - _prototype: mysql.version
        type: ZABBIX_PASSIVE
        key: mysql.version["{$MYSQL.HOST}","{$MYSQL.PORT}"]
      - _prototype: mysql.uptime
      - _prototype: mysql.aborted_clients.rate
      - _prototype: mysql.aborted_connects.rate
      - _prototype: mysql.connection_errors_accept.rate
      - _prototype: mysql.connection_errors_internal.rate
      - _prototype: mysql.connection_errors_max_connections.rate
      - _prototype: mysql.connection_errors_peer_address.rate
      - _prototype: mysql.connection_errors_select.rate
      - _prototype: mysql.connection_errors_tcpwrap.rate
      - _prototype: mysql.connections.rate
      - _prototype: mysql.max_used_connections
      - _prototype: mysql.threads_cached
      - _prototype: mysql.threads_connected
      - _prototype: mysql.threads_created
      - _prototype: mysql.threads_running
      - _prototype: mysql.buffer_pool_efficiency
      - _prototype: mysql.buffer_pool_utilization
      - _prototype: mysql.created_tmp_files
      - _prototype: mysql.created_tmp_disk_tables
      - _prototype: mysql.created_tmp_tables
      - _prototype: mysql.innodb_buffer_pool_pages_free
      - _prototype: mysql.innodb_buffer_pool_pages_total
      - _prototype: mysql.innodb_buffer_pool_read_requests
      - _prototype: mysql.innodb_buffer_pool_read_requests.rate
      - _prototype: mysql.innodb_buffer_pool_reads
      - _prototype: mysql.innodb_buffer_pool_reads.rate
      - _prototype: mysql.innodb_row_lock_time
      - _prototype: mysql.innodb_row_lock_time_max
      - _prototype: mysql.innodb_row_lock_waits
      - _prototype: mysql.slow_queries.rate
      - _prototype: mysql.bytes_received.rate
      - _prototype: mysql.bytes_sent.rate
      - _prototype: mysql.com_delete.rate
      - _prototype: mysql.com_insert.rate
      - _prototype: mysql.com_select.rate
      - _prototype: mysql.com_update.rate
      - _prototype: mysql.queries.rate
      - _prototype: mysql.questions.rate
    discovery_rules:
      - name: Databases discovery
        key: mysql.db.discovery["{$MYSQL.HOST}","{$MYSQL.PORT}"]
        type: ZABBIX_PASSIVE
        update: 1h
        description: Scanning databases in DBMS.
        preprocessing:
          - type: JAVASCRIPT
            params: |-
              arr = value.split('\n')
              s = []
              for (var i in arr) {
                s.push({"{#DBNAME}": arr[i]})
              }
              return JSON.stringify(s)
          - type: DISCARD_UNCHANGED_HEARTBEAT
            params: 1d
        filter:
          evaltype: AND_OR
          conditions:
            - macro: "{#DBNAME}"
              value: information_schema
              formulaid: A
              operator: NOT_MATCHES_REGEX
        items:
          - _id: mysql.dbsize
            _resource: MySQL
            name: "Size of database {#DBNAME}"
            type: ZABBIX_PASSIVE
            key: mysql.dbsize["{$MYSQL.HOST}","{$MYSQL.PORT}","{#DBNAME}"]
            value_type: UNSIGNED
            units: B
            update: 5m
            _group: MySQL
            preprocessing:
              - type: DISCARD_UNCHANGED_HEARTBEAT
                params: 1h
      - name: Replication discovery
        key: mysql.replication.discovery["{$MYSQL.HOST}","{$MYSQL.PORT}"]
        type: ZABBIX_PASSIVE
        update: 1h
        description: 'IfÂ "show slave status" returns Master_Host, "Replication: *" items are created.'
        preprocessing:
          - type: JAVASCRIPT
            params: |-
              var a = value.match(/Master_Host.*>(.*)<.*/)
              if (a) {
                s = [{"{#MASTERHOST}": a[1]}]
              } 
              else {
                s = []
              }
              return JSON.stringify(s)
          - type: DISCARD_UNCHANGED_HEARTBEAT
            params: 1d
        items:
          - _id: mysql.slave_status
            _resource: MySQL
            name: "Replication Slave status {#MASTERHOST}"
            type: ZABBIX_PASSIVE
            key: mysql.slave_status["{$MYSQL.HOST}","{$MYSQL.PORT}","{#MASTERHOST}"]
            value_type: TEXT
            update: 1m
            history: 1h
            _group: Zabbix_raw_items
            description: The item gets status information on essential parameters of the slave threads.
          - _id: mysql.seconds_behind_master
            _resource: MySQL
            name: "Replication Seconds Behind Master {#MASTERHOST}"
            type: DEPENDENT
            key: mysql.seconds_behind_master["{#MASTERHOST}"]
            master_item: mysql.slave_status
            value_type: UNSIGNED
            units: s
            _group: MySQL
            description: |
              The number of seconds that the slave SQL thread is behind processing the master binary log.
              A high number (or an increasing one) can indicate that the slave is unable to handle events
              from the master in a timely fashion.
            preprocessing:
              - type: XMLPATH
                params: /resultset/row/field[@name='Seconds_Behind_Master']/text()
              - type: DISCARD_UNCHANGED_HEARTBEAT
                params: 1h
              - type: NOT_MATCHES_REGEX
                params: "null"
                error_handler: CUSTOM_ERROR
                error_handler_params: Replication is not performed.
            triggers:
              - _id: trigger.seconds_behind_master
                name: "Replication lag is too high (over {$MYSQL.REPL_LAG.MAX.WARN} for 5m)"
                priority: WARNING
                expression: "{TEMPLATE_NAME:METRIC.min(5m)}>{$MYSQL.REPL_LAG.MAX.WARN}"
          - _id: mysql.slave_io_running
            _resource: MySQL
            name: "Replication Slave IO Running {#MASTERHOST}"
            type: DEPENDENT
            key: mysql.slave_io_running["{#MASTERHOST}"]
            master_item: mysql.slave_status
            value_type: CHAR
            _group: MySQL
            description: |
              Whether the I/O thread for reading the master's binary log is running. 
              Normally, you want this to be Yes unless you have not yet started replication or have 
              explicitly stopped it with STOP SLAVE.
            preprocessing:
              - type: XMLPATH
                params: /resultset/row/field[@name='Slave_IO_Running']/text()
              - type: DISCARD_UNCHANGED_HEARTBEAT
                params: 1h
            triggers:
              - _id: trigger.slave_io_running
                name: "The slave I/O thread is not running"
                priority: AVERAGE
                expression: '{TEMPLATE_NAME:METRIC.count(#1,"No",eq)}=1'
                description: Whether the I/O thread for reading the master's binary log is running.
              - name: "The slave I/O thread is not connected to a replication master"
                priority: WARNING
                expression: '{TEMPLATE_NAME:METRIC.count(#1,"Yes",ne)}=1'
                _depends_on:
                  - trigger.slave_io_running
          - _id: mysql.slave_sql_running
            _resource: MySQL
            name: "Replication Slave SQL Running {#MASTERHOST}"
            type: DEPENDENT
            key: mysql.slave_sql_running["{#MASTERHOST}"]
            master_item: mysql.slave_status
            value_type: CHAR
            _group: MySQL
            description: |
              Whether the SQL thread for executing events in the relay log is running. 
              As with the I/O thread, this should normally be Yes.
            preprocessing:
              - type: XMLPATH
                params: /resultset/row/field[@name='Slave_SQL_Running']/text()
              - type: DISCARD_UNCHANGED_HEARTBEAT
                params: 1h
            triggers:
              - name: The SQL thread is not running
                priority: WARNING
                expression: '{TEMPLATE_NAME:METRIC.count(#1,"No",eq)}=1'
                description: Whether the SQL thread for executing events in the relay log is running.
                _depends_on:
                  - trigger.slave_io_running
    screens:
      - name: MySQL performance
        hsize: 2
        vsize: 3
        screen_items:
          - resourcetype: GRAPH
            resource:
              - name: "MySQL: Operations"
            x: 0
            y: 0
          - resourcetype: GRAPH
            resource:
              - name: "MySQL: Queries"
            x: 1
            y: 0
          - resourcetype: GRAPH
            resource:
              - name: "MySQL: Connections"
            x: 0
            y: 1
          - resourcetype: GRAPH
            resource:
              - name: "MySQL: Bandwidth"
            x: 1
            y: 1
          - resourcetype: GRAPH
            resource:
              - name: "MySQL: InnoDB buffer pool"
            x: 0
            y: 2
          - resourcetype: GRAPH
            resource:
              - name: "MySQL: Threads"
            x: 1
            y: 2
value_maps:
  - name: Service state
    mappings:
      - value: "0"
        newvalue: Down
      - value: "1"
        newvalue: Up
