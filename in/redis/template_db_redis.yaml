templates:
  - name: Template DB Redis
    _zbx_ver: '4.4'
    _classes:
      - DB
    description: |-
      Get Redis metrics from plugin for the New Zabbix Agent (zabbix-agent2).

    _documentation:
      _tested_on:
        - name: Redis
          version: 5.0.6, 4.0.14, 3.0.6

      _overview: |+
        The template to monitor Redis server by Zabbix that work without any external scripts.
        Most of the metrics are collected in one go, thanks to Zabbix bulk data collection.

        `Template Db Redis` — collects metrics by polling a New Zabbix Agent (zabbix-agent2).

      _setup: |
        Setup and configure a New Zabbix Agent compiled with the Redis monitoring plugin (ZBXNEXT-5428-4.3).
        
        Test availability: `zabbix_get -s redis-master -k redis.ping`


      _zabbix_forum_url: https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/389050-discussion-thread-for-official-zabbix-template-redis

    items:
      #################
      ### Raw items ###
      #################
      - _prototype: redis.info
        key: redis.info["{$REDIS.CONN.URI}"]
        triggers:
          - _id: trigger.redis.info
            expression: '{TEMPLATE_NAME:METRIC.nodata(30m)}=1'
            name: 'Failed to fetch info data (or no data for 30m)'
            description: 'Zabbix has not received data for items for the last 30 minutes'
            manual_close: 'YES'
            priority: WARNING
            _depends_on:
              - trigger.status

      - _prototype: redis.config
        key: redis.config["{$REDIS.CONN.URI}"]
        triggers:
          - _prototype: trigger.version.changed
            name: 'Configuration has changed'
            description: '__RESOURCE__ configuration has changed. Ack to close.'

      - _prototype: redis.ping
        key: redis.ping["{$REDIS.CONN.URI}"]
        value_map: Service state
        preprocessing:
          - type: DISCARD_UNCHANGED_HEARTBEAT
            params: "10m"
        triggers:
          - _id: trigger.status
            name: Service is down
            expression: "{TEMPLATE_NAME:METRIC.last()}=0"
            manual_close: "YES"
            priority: AVERAGE

      - _prototype: redis.slowlog.count
        _id: redis.slowlog.count
        name: Slowlog entries per second
        key: redis.slowlog.count["{$REDIS.CONN.URI}"]
        preprocessing:
          - type: CHANGE_PER_SECOND
        triggers:
          - _id: trigger.redis.slowlog.count
            name: 'Too many entries in the slowlog (over {$REDIS.SLOWLOG.COUNT.MAX.WARN} per second in 5m)'
            expression: '{TEMPLATE_NAME:METRIC.min(5m)}>{$REDIS.SLOWLOG.COUNT.MAX.WARN}'
            priority: INFO
        graphs:
          - _id: redis.slowlog
            name: Slowlog
            graph_items:
              - name: redis.slowlog.count
                drawtype: GRADIENT_LINE

      #######################
      ### Dependent items ###
      #######################
      # CPU section
      - _prototype: redis._float
        name: CPU sys
        key: redis.cpu.sys
        units: s
        description: System CPU consumed by the Redis server
        preprocessing:
          - type: JSONPATH
            params: '$.CPU.used_cpu_sys'

      - _prototype: redis._float
        name: CPU sys children
        key: redis.cpu.sys_children
        units: s
        description: System CPU consumed by the background processes
        preprocessing:
          - type: JSONPATH
            params: '$.CPU.used_cpu_sys_children'

      - _prototype: redis._float
        name: CPU user
        key: redis.cpu.user
        units: s
        description: User CPU consumed by the Redis server
        preprocessing:
          - type: JSONPATH
            params: '$.CPU.used_cpu_user'

      - _prototype: redis._float
        name: CPU user children
        key: redis.cpu.user_children
        units: s
        description: User CPU consumed by the background processes
        preprocessing:
          - type: JSONPATH
            params: '$.CPU.used_cpu_user_children'
        graphs:
          - _id: redis.cpu
            name: CPU
            graph_items:
              - name: redis.cpu.sys
                drawtype: GRADIENT_LINE
              - name: redis.cpu.sys_children
              - name: redis.cpu.user
                drawtype: GRADIENT_LINE
              - name: redis.cpu.user_children

      # Clients section
      - _prototype: redis._unsigned
        name: 'Blocked clients'
        key: redis.clients.blocked
        description: 'The number of connections waiting on a blocking call'
        preprocessing:
          - type: JSONPATH
            params: '$.Clients.blocked_clients'

      - _prototype: redis._unsigned
        name: 'Max input buffer'
        key: 'redis.clients.max_input_buffer'
        description: The biggest input buffer among current client connections
        preprocessing:
          - type: JAVASCRIPT
            params: |-
              var clients = JSON.parse(value).Clients
              return clients.client_recent_max_input_buffer || clients.client_biggest_input_buf

      - _prototype: redis._unsigned
        name: 'Max output buffer'
        key: 'redis.clients.max_output_buffer'
        description: The biggest output buffer among current client connections
        preprocessing:
          - type: JAVASCRIPT
            params: |-
              var clients = JSON.parse(value).Clients
              return clients.client_recent_max_output_buffer || clients.client_longest_output_list

      - _prototype: redis._unsigned
        name: Connected clients
        key: redis.clients.connected
        description: The number of connected clients
        preprocessing:
          - type: JSONPATH
            params: '$.Clients.connected_clients'
        triggers:
          - name: 'Total number of connected clients is too high (over {$REDIS.CLIENTS.PRC.MAX.WARN}% in 5m)'
            expression: '{TEMPLATE_NAME:METRIC.min(5m)}/{TEMPLATE_NAME:__config.maxclients__.last()}*100>{$REDIS.CLIENTS.PRC.MAX.WARN}'
            priority: WARNING
        graphs:
          - _id: redis.connected_clients
            name: Clients
            graph_items:
              - name: redis.clients.connected
                drawtype: GRADIENT_LINE
              - name: redis.clients.blocked
                drawtype: GRADIENT_LINE

      # Cluster section
      - _prototype: redis._unsigned
        name: Cluster enabled
        key: redis.cluster.enabled
        description: 'Indicate Redis cluster is enabled'
        preprocessing:
          - type: JSONPATH
            params: '$.Cluster.cluster_enabled'

      # Memory section

      - _prototype: redis._unsigned
        name: Memory used
        key: redis.memory.used_memory
        units: B
        description: 'Total number of bytes allocated by Redis using its allocator'
        preprocessing:
          - type: JSONPATH
            params: '$.Memory.used_memory'
        graphs:
          - _id: redis.memory
            name: Memory
            graph_items:
              - name: redis.memory.used_memory
                drawtype: GRADIENT_LINE
              - name: redis.memory.used_memory_rss
                drawtype: BOLD_LINE
              - name: redis.memory.used_memory_peak
                drawtype: BOLD_LINE

      - _prototype: redis._unsigned
        name: Memory used Lua
        key: redis.memory.used_memory_lua
        units: B
        description: 'Amount of memory used by the Lua engine'
        preprocessing:
          - type: JSONPATH
            params: '$.Memory.used_memory_lua'

      - _prototype: redis._unsigned
        name: 'Memory used peak'
        key: 'redis.memory.used_memory_peak'
        units: B
        description: 'Peak memory consumed by Redis (in bytes)'
        preprocessing:
          - type: JSONPATH
            params: '$.Memory.used_memory_peak'

      - _prototype: redis._unsigned
        name: Memory used RSS
        key: redis.memory.used_memory_rss
        units: B
        description: 'Number of bytes that Redis allocated as seen by the operating system'
        preprocessing:
          - type: JSONPATH
            params: '$.Memory.used_memory_rss'

      # Persistence section

      - _prototype: redis._float
        name: AOF current rewrite time sec
        key: redis.persistence.aof_current_rewrite_time_sec
        description: 'Duration of the on-going AOF rewrite operation if any'
        units: s
        value_map: Redis bgsave time
        preprocessing:
          - type: JSONPATH
            params: '$.Persistence.aof_current_rewrite_time_sec'

      - _prototype: redis._unsigned
        name: AOF enabled
        key: redis.persistence.aof_enabled
        value_map: Redis flag
        description: 'Flag indicating AOF logging is activated'
        preprocessing:
          - type: JSONPATH
            params: '$.Persistence.aof_enabled'

      - _prototype: redis._unsigned
        name: AOF last bgrewrite status
        key: redis.persistence.aof_last_bgrewrite_status
        description: 'Status of the last AOF rewrite operation'
        value_map: Redis bgwrite status
        preprocessing:
          - type: JSONPATH
            params: '$.Persistence.aof_last_bgrewrite_status'
          - type: BOOL_TO_DECIMAL

      - _prototype: redis._float
        name: AOF last rewrite time sec
        key: redis.persistence.aof_last_rewrite_time_sec
        units: s
        value_map: Redis bgsave time
        description: 'Duration of the last AOF rewrite'
        preprocessing:
          - type: JSONPATH
            params: '$.Persistence.aof_last_rewrite_time_sec'

      - _prototype: redis._unsigned
        name: AOF last write status
        key: redis.persistence.aof_last_write_status
        description: 'Status of the last write operation to the AOF'
        value_map: Redis bgwrite status
        preprocessing:
          - type: JSONPATH
            params: '$.Persistence.aof_last_write_status'
          - type: BOOL_TO_DECIMAL
        triggers:
          - name: Last AOF write operation failed
            expression: '{TEMPLATE_NAME:METRIC.last()}=0'
            priority: WARNING

      - _prototype: redis._unsigned
        name: AOF rewrite in progress
        key: redis.persistence.aof_rewrite_in_progress
        description: 'Flag indicating a AOF rewrite operation is on-going'
        preprocessing:
          - type: JSONPATH
            params: '$.Persistence.aof_rewrite_in_progress'

      - _prototype: redis._unsigned
        name: AOF rewrite scheduled
        key: redis.persistence.aof_rewrite_scheduled
        description: 'Flag indicating an AOF rewrite operation will be scheduled once the on-going RDB save is complete'
        preprocessing:
          - type: JSONPATH
            params: '$.Persistence.aof_rewrite_scheduled'


      - _prototype: redis._unsigned
        name: Dump loading
        key: redis.persistence.loading
        value_map: Redis flag
        description: 'Flag indicating if the load of a dump file is on-going'
        preprocessing:
          - type: JSONPATH
            params: '$.Persistence.loading'
      
      - _prototype: redis._unsigned
        name: RDB bgsave in progress
        key: redis.persistence.rdb_bgsave_in_progress
        description: '"1" if bgsave is in progress and "0" otherwise'
        preprocessing:
          - type: JSONPATH
            params: '$.Persistence.rdb_bgsave_in_progress'

      - _prototype: redis._unsigned
        name: RDB changes since last save
        key: redis.persistence.rdb_changes_since_last_save
        description: 'Number of changes since the last background save'
        preprocessing:
          - type: JSONPATH
            params: '$.Persistence.rdb_changes_since_last_save'

      - _prototype: redis._float
        name: RDB current bgsave time sec
        key: redis.persistence.rdb_current_bgsave_time_sec
        units: s
        value_map: Redis bgsave time
        description: 'Duration of the on-going RDB save operation if any'
        preprocessing:
          - type: JSONPATH
            params: '$.Persistence.rdb_current_bgsave_time_sec'

      - _prototype: redis._unsigned
        name: RDB last bgsave status
        key: redis.persistence.rdb_last_bgsave_status
        description: 'Status of the last RDB save operation'
        value_map: Redis bgwrite status
        preprocessing:
          - type: JSONPATH
            params: '$.Persistence.rdb_last_bgsave_status'
          - type: BOOL_TO_DECIMAL
        triggers:
          - name: Last RDB save operation failed
            expression: '{TEMPLATE_NAME:METRIC.last()}=0'
            priority: WARNING

      - _prototype: redis._float
        name: RDB last bgsave time sec
        key: redis.persistence.rdb_last_bgsave_time_sec
        units: s
        value_map: Redis bgsave time
        description: 'Duration of the last bg_save operation'
        preprocessing:
          - type: JSONPATH
            params: '$.Persistence.rdb_last_bgsave_time_sec'
        graphs:
          - _id: redis.persistence
            name: Persistence
            graph_items:
              - name: redis.persistence.rdb_last_bgsave_time_sec
                drawtype: BOLD_LINE
              - name: redis.persistence.aof_last_rewrite_time_sec
                drawtype: BOLD_LINE

      - _prototype: redis._unsigned
        name: RDB last save time
        key: redis.persistence.rdb_last_save_time
        description: 'Epoch-based timestamp of last successful RDB save'
        preprocessing:
          - type: JSONPATH
            params: '$.Persistence.rdb_last_save_time'

      # Replication section

      - _prototype: redis._unsigned
        name: Connected slaves
        key: redis.replication.connected_slaves
        description: 'Number of connected slaves'
        preprocessing:
          - type: JSONPATH
            params: '$.Replication.connected_slaves'
        triggers:
          - _id: trigger.slaves_count.changed
            name: 'Slaves number has changed'
            expression: '{TEMPLATE_NAME:METRIC.diff()}=1'
            description: '__RESOURCE__ slaves number has changed. Ack to close.'
            recovery_mode: NONE
            manual_close: 'YES'
            priority: INFO
        graphs:
          - _id: redis.slaves
            name: Slaves
            graph_items:
              - name: redis.replication.connected_slaves
                drawtype: GRADIENT_LINE


      - _prototype: redis._unsigned
        name: Replication backlog active
        key: redis.replication.repl_backlog_active
        value_map: Redis flag
        description: 'Flag indicating replication backlog is active'
        preprocessing:
          - type: JSONPATH
            params: '$.Replication.repl_backlog_active'

      - _prototype: redis._unsigned
        name: Replication backlog first byte offset
        key: redis.replication.repl_backlog_first_byte_offset
        units: B
        description: 'The master offset of the replication backlog buffer'
        preprocessing:
          - type: JSONPATH
            params: '$.Replication.repl_backlog_first_byte_offset'

      - _prototype: redis._unsigned
        name: Replication backlog history length
        key: redis.replication.repl_backlog_histlen
        description: 'Amount of data in the backlog sync buffer'
        preprocessing:
          - type: JSONPATH
            params: '$.Replication.repl_backlog_histlen'

      - _prototype: redis._unsigned
        name: Replication backlog size
        key: redis.replication.repl_backlog_size
        units: B
        description: 'Total size in bytes of the replication backlog buffer'
        preprocessing:
          - type: JSONPATH
            params: '$.Replication.repl_backlog_size'

      - _prototype: redis._char
        name: Replication role
        key: redis.replication.role
        description: 'Value is "master" if the instance is replica of no one, or "slave" if the instance is a replica of some master instance. Note that a replica can be master of another replica (chained replication).'
        preprocessing:
          - type: JSONPATH
            params: '$.Replication.role'
          - type: DISCARD_UNCHANGED_HEARTBEAT
            params: 1d
        triggers:
          - _id: trigger.redis.repl_role.changed
            name: 'Replication role has changed (new role: {ITEM.VALUE})'
            expression: '{TEMPLATE_NAME:METRIC.diff()}=1 and {TEMPLATE_NAME:METRIC.strlen()}>0'
            description: '__RESOURCE__ replication role has changed. Ack to close.'
            recovery_mode: NONE
            manual_close: 'YES'
            priority: WARNING


      - _prototype: redis._unsigned
        name: 'Master replication offset'
        key: 'redis.replication.master_repl_offset'
        units: B
        value_map: Redis repl offset
        description: 'Replication offset reported by the master'
        preprocessing:
          - type: JSONPATH
            params: '$.Replication.master_repl_offset'

      # Server section

      # - _prototype: redis._unsigned
      #   name: Arch bits
      #   key: redis.server.arch_bits
      #   description: 'Architecture (32 or 64 bits)'
      #   preprocessing:
      #     - type: JSONPATH
      #       params: '$.Server.arch_bits'
      #     - type: DISCARD_UNCHANGED_HEARTBEAT
      #       params: 1d

      # - _prototype: redis._char
      #   name: Config file
      #   key: redis.server.config_file
      #   description: 'The path to the config file'
      #   preprocessing:
      #     - type: JSONPATH
      #       params: '$.Server.config_file'
      #     - type: DISCARD_UNCHANGED_HEARTBEAT
      #       params: 1d

      - _prototype: redis._unsigned
        name: Process id
        key: redis.server.process_id
        description: 'PID of the server process'
        preprocessing:
          - type: JSONPATH
            params: '$.Server.process_id'
          - type: DISCARD_UNCHANGED_HEARTBEAT
            params: 1d

      - _prototype: redis._char
        name: Redis mode
        key: redis.server.redis_mode
        description: 'The server''s mode ("standalone", "sentinel" or "cluster")'
        preprocessing:
          - type: JSONPATH
            params: '$.Server.redis_mode'
          - type: DISCARD_UNCHANGED_HEARTBEAT
            params: 1d

      - _prototype: redis._char
        name: Redis version
        key: redis.server.redis_version
        description: 'Version of the Redis server'
        preprocessing:
          - type: JSONPATH
            params: '$.Server.redis_version'
          - type: DISCARD_UNCHANGED_HEARTBEAT
            params: 1d
        triggers:
          - _prototype: trigger.version.changed

      - _prototype: redis._unsigned
        name: TCP port
        key: redis.server.tcp_port
        description: 'TCP/IP listen port'
        preprocessing:
          - type: JSONPATH
            params: '$.Server.tcp_port'
          - type: DISCARD_UNCHANGED_HEARTBEAT
            params: 1d

      # - _prototype: redis._unsigned
      #   name: Uptime in days
      #   key: redis.server.uptime_in_days
      #   description: 'Same value expressed in days'
      #   preprocessing:
      #     - type: JSONPATH
      #       params: '$.Server.uptime_in_days'
      
      - _prototype: redis._unsigned
        name: Uptime
        key: redis.server.uptime
        units: s
        description: 'Number of seconds since Redis server start'
        preprocessing:
          - type: JSONPATH
            params: '$.Server.uptime'
        triggers:
          - _prototype: trigger.uptime.restarted
        graphs:
          - _id: redis.uptime
            name: Uptime
            graph_items:
              - name: redis.server.uptime
                drawtype: SINGLE_LINE

      # Stats section

      - _prototype: redis._unsigned
        name: Evicted keys
        key: redis.stats.evicted_keys
        description: 'Number of evicted keys due to maxmemory limit'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.evicted_keys'

      - _prototype: redis._unsigned
        name: Expired keys
        key: redis.stats.expired_keys
        description: 'Total number of key expiration events'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.expired_keys'
        graphs:
          - _id: redis.keys
            name: Expired keys
            graph_items:
              - name: redis.stats.expired_keys
                drawtype: BOLD_LINE
              - name: redis.stats.evicted_keys
                drawtype: BOLD_LINE

      - _prototype: redis._float
        name: Instantaneous input bytes per second
        key: redis.stats.instantaneous_input.rate
        units: Bps
        description: 'The network''s read rate per second in KB/sec'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.instantaneous_input_kbps'
          - type: MULTIPLIER
            params: 1024
        graphs:
          - _id: redis.network
            name: Network
            graph_items:
              - name: redis.stats.instantaneous_input.rate
                drawtype: GRADIENT_LINE
              - name: redis.stats.instantaneous_output.rate
                drawtype: GRADIENT_LINE

      - _prototype: redis._unsigned
        name: Instantaneous operations per sec
        key: redis.stats.instantaneous_ops.rate
        description: 'Number of commands processed per second'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.instantaneous_ops_per_sec'
        graphs:
          - _id: redis.commands.rate
            name: Commands
            graph_items:
              - name: redis.stats.instantaneous_ops.rate
                drawtype: SINGLE_LINE


      - _prototype: redis._float
        name: Instantaneous output bytes per second
        key: redis.stats.instantaneous_output.rate
        units: Bps
        description: 'The network''s write rate per second in KB/sec'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.instantaneous_output_kbps'
          - type: MULTIPLIER
            params: 1024

      - _prototype: redis._unsigned
        name: Keyspace hits
        key: redis.stats.keyspace_hits
        description: 'Number of successful lookup of keys in the main dictionary'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.keyspace_hits'
        graphs:
          - _id: redis.keyspace
            name: Keyspace
            graph_items:
              - name: redis.stats.keyspace_hits
                drawtype: SINGLE_LINE
              - name: redis.stats.keyspace_misses
                drawtype: SINGLE_LINE

      - _prototype: redis._unsigned
        name: Keyspace misses
        key: redis.stats.keyspace_misses
        description: 'Number of failed lookup of keys in the main dictionary'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.keyspace_misses'

      - _prototype: redis._unsigned
        name: Latest fork usec
        key: redis.stats.latest_fork_usec
        units: s
        description: 'Duration of the latest fork operation in microseconds'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.latest_fork_usec'
          - type: MULTIPLIER
            params: 0.00001

      - _prototype: redis._unsigned
        name: Migrate cached sockets
        key: redis.stats.migrate_cached_sockets
        description: 'The number of sockets open for MIGRATE purposes'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.migrate_cached_sockets'

      - _prototype: redis._unsigned
        name: Pubsub channels
        key: redis.stats.pubsub_channels
        description: 'Global number of pub/sub channels with client subscriptions'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.pubsub_channels'

      - _prototype: redis._unsigned
        name: Pubsub patterns
        key: redis.stats.pubsub_patterns
        description: 'Global number of pub/sub pattern with client subscriptions'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.pubsub_patterns'

      - _prototype: redis._unsigned
        name: Rejected connections
        key: redis.stats.rejected_connections
        description: 'Number of connections rejected because of maxclients limit'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.rejected_connections'
        triggers:
          - name: 'Connections are rejected'
            expression: '{TEMPLATE_NAME:METRIC.last()}>0'
            priority: HIGH

      - _prototype: redis._unsigned
        name: Sync full
        key: redis.stats.sync_full
        description: 'The number of full resyncs with replicas'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.sync_full'

      - _prototype: redis._unsigned
        name: Sync partial err
        key: redis.stats.sync_partial_err
        description: 'The number of denied partial resync requests'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.sync_partial_err'

      - _prototype: redis._unsigned
        name: Sync partial ok
        key: redis.stats.sync_partial_ok
        description: 'The number of accepted partial resync requests'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.sync_partial_ok'

      - _prototype: redis._unsigned
        name: Total commands processed
        key: redis.stats.total_commands_processed
        description: 'Total number of commands processed by the server'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.total_commands_processed'

      - _prototype: redis._unsigned
        name: Total connections received
        key: redis.stats.total_connections_received
        description: 'Total number of connections accepted by the server'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.total_connections_received'

      - _prototype: redis._unsigned
        name: Total net input bytes
        key: redis.stats.total_net_input_bytes
        units: B
        description: 'The total number of bytes read from the network'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.total_net_input_bytes'

      - _prototype: redis._unsigned
        name: Total net output bytes
        key: redis.stats.total_net_output_bytes
        units: B
        description: 'The total number of bytes written to the network'
        preprocessing:
          - type: JSONPATH
            params: '$.Stats.total_net_output_bytes'

      # Configuration parameters (from redis.config)
      # Needed for trigger by number of connections

      - _prototype: redis._unsigned
        _id: config.maxclients
        name: Max clients
        key: redis.config.maxclients
        master_item: redis.config
        description: |
          Max number of connected clients at the same time.
          Once the limit is reached Redis will close all the new connections sending an error "max number of clients reached".
        preprocessing:
          - type: JSONPATH
            params: '$.maxclients'
          - type: DISCARD_UNCHANGED_HEARTBEAT
            # Too strange? Ask me why :)
            params: 30m


    #################
    ### Discovery ###
    #################

    discovery_rules:

      ### Keyspace discovery ###
      ##########################
      - name: 'Keyspace discovery'
        description: |
          Individual keyspace metrics

        key: redis.keyspace.discovery
        type: DEPENDENT
        masterItem: redis.info

        preprocessing:
        # Replace with JSONPATH after fixing the structure in the plugin output
        - type: JAVASCRIPT
          params: |-
            return JSON.stringify(Object.keys(JSON.parse(value).Keyspace)
              .map(function (v){return {"{#DB}": v}}));

        filter:
          evalType: 'AND'
          conditions:
            - macro: '{#DB}'
              value: '{$REDIS.LLD.FILTER.DB.MATCHES}'
              operator: 'MATCHES_REGEX'
              formulaid: 'A'

            - macro: '{#DB}'
              value: '{$REDIS.LLD.FILTER.DB.NOT_MATCHES}'
              operator: 'NOT_MATCHES_REGEX'
              formulaid: 'B'

        items:
          - _prototype: redis._unsigned
            _resource: 'DB {#DB}'
            name: 'Average TTL'
            key: redis.db.avg_ttl["{#DB}"]
            units: s
            description: 'Average TTL'
            application_prototype: 'Redis: DB {#DB}'
            preprocessing:
              - type: JSONPATH
                params: '$.Keyspace["{#DB}"].avg_ttl'
              - type: MULTIPLIER
                params: 0.001

          - _prototype: redis._unsigned
            _resource: 'DB {#DB}'
            name: 'Expires'
            key: redis.db.expires["{#DB}"]
            description: 'Number of keys with an expiration'
            application_prototype: 'Redis: DB {#DB}'
            preprocessing:
              - type: JSONPATH
                params: '$.Keyspace["{#DB}"].expires'

          - _prototype: redis._unsigned
            _resource: 'DB {#DB}'
            name: 'Keys'
            key: redis.db.keys["{#DB}"]
            description: 'Total number of keys'
            application_prototype: 'Redis: DB {#DB}'
            preprocessing:
              - type: JSONPATH
                params: '$.Keyspace["{#DB}"].keys'
            graphs:
              - _id: redis.keyspace
                name: 'DB {#DB}: Keys'
                graph_items:
                  - name: 'redis.db.keys["{#DB}"]'
                    drawtype: GRADIENT_LINE
                  - name: 'redis.db.expires["{#DB}"]'
                    drawtype: GRADIENT_LINE

      - name: 'AOF metrics discovery'
        description: |
          If AOF is activated, additional metrics will be added

        key: redis.persistence.aof.discovery
        type: DEPENDENT
        masterItem: redis.info

        preprocessing:
          - type: JAVASCRIPT
            params: |-
              return JSON.stringify(JSON.parse(value).Persistence.aof_enabled === '1'
                ? [{'{#SINGLETON}': ''}]
                : []);
        
        items:
          - _prototype: redis._unsigned
            name: 'AOF current size{#SINGLETON}'
            key: 'redis.persistence.aof_current_size[{#SINGLETON}]'
            units: B
            description: 'AOF current file size'
            preprocessing:
              - type: JSONPATH
                params: '$.Persistence.aof_current_size'

          - _prototype: redis._unsigned
            name: 'AOF base size{#SINGLETON}'
            key: 'redis.persistence.aof_base_size[{#SINGLETON}]'
            units: B
            description: 'AOF file size on latest startup or rewrite'
            preprocessing:
              - type: JSONPATH
                params: '$.Persistence.aof_base_size'

          - _prototype: redis._unsigned
            name: 'AOF pending rewrite{#SINGLETON}'
            key: 'redis.persistence.aof_pending_rewrite[{#SINGLETON}]'
            value_map: Redis flag
            description: 'Flag indicating an AOF rewrite operation will'
            preprocessing:
              - type: JSONPATH
                params: '$.Persistence.aof_pending_rewrite'

          - _prototype: redis._unsigned
            name: 'AOF buffer length{#SINGLETON}'
            key: 'redis.persistence.aof_buffer_length[{#SINGLETON}]'
            units: B
            description: 'Size of the AOF buffer'
            preprocessing:
              - type: JSONPATH
                params: '$.Persistence.aof_buffer_length'

          - _prototype: redis._unsigned
            name: 'AOF rewrite buffer length{#SINGLETON}'
            key: 'redis.persistence.aof_rewrite_buffer_length[{#SINGLETON}]'
            units: B
            description: 'Size of the AOF rewrite buffer'
            preprocessing:
              - type: JSONPATH
                params: '$.Persistence.aof_rewrite_buffer_length'

          - _prototype: redis._unsigned
            name: 'AOF pending background I/O fsync{#SINGLETON}'
            key: 'redis.persistence.aof_pending_bio_fsync[{#SINGLETON}]'
            description: 'Number of fsync pending jobs in background I/O queue'
            preprocessing:
              - type: JSONPATH
                params: '$.Persistence.aof_pending_bio_fsync'

          - _prototype: redis._unsigned
            name: 'AOF delayed fsync{#SINGLETON}'
            key: 'redis.persistence.aof_delayed_fsync[{#SINGLETON}]'
            description: 'Delayed fsync counter'
            preprocessing:
              - type: JSONPATH
                params: '$.Persistence.aof_delayed_fsync'

        ### Slave metrics discovery ###
        ###########################################
      - name: 'Slave metrics discovery'
        description: |
          If the instance is a replica, additional metrics are provided

        key: redis.replication.slave.discovery
        type: DEPENDENT
        masterItem: redis.info

        preprocessing:
          - type: JAVASCRIPT
            params: |-
              return JSON.stringify(JSON.parse(value).Replication.role === 'slave'
                ? [{'{#SINGLETON}': ''}]
                : []);

        items:
          - _prototype: redis._char
            name: 'Master host{#SINGLETON}'
            key: redis.replication.master_host[{#SINGLETON}]
            description: 'Host or IP address of the master'
            preprocessing:
              - type: JSONPATH
                params: '$.Replication.master_host'
              - type: DISCARD_UNCHANGED_HEARTBEAT
                params: 1d

          - _prototype: redis._unsigned
            name: 'Master port{#SINGLETON}'
            key: redis.replication.master_port[{#SINGLETON}]
            description: 'Master listening TCP port'
            preprocessing:
              - type: JSONPATH
                params: '$.Replication.master_port'
              - type: DISCARD_UNCHANGED_HEARTBEAT
                params: 1d

          - _prototype: redis._char
            name: 'Master link status{#SINGLETON}'
            key: redis.replication.master_link_status[{#SINGLETON}]
            description: 'Status of the link (up/down)'
            preprocessing:
              - type: JSONPATH
                params: '$.Replication.master_link_status'
              - type: BOOL_TO_DECIMAL

          - _prototype: redis._unsigned
            name: 'Master last I/O seconds ago{#SINGLETON}'
            key: redis.replication.master_last_io_seconds_ago[{#SINGLETON}]
            units: s
            description: 'Number of seconds since the last interaction with master'
            preprocessing:
              - type: JSONPATH
                params: '$.Replication.master_last_io_seconds_ago'
            triggers:
              - _id: redis.replication_lag.sec
                name: Replication lag with master is too high (over {$REDIS.REPL.LAG.MAX.WARN} in 5m)
                expression: '{TEMPLATE_NAME:METRIC.min(5m)}>{$REDIS.REPL.LAG.MAX.WARN}'
                priority: WARNING
            graphs:
              - _id: redis.replication.lag
                name: 'Replication lag time{#SINGLETON}'
                graph_items:
                  - name: 'redis.replication.master_last_io_seconds_ago[{#SINGLETON}]'
                    drawtype: BOLD_LINE

          - _prototype: redis._unsigned
            name: 'Master sync in progress{#SINGLETON}'
            key: redis.replication.master_sync_in_progress[{#SINGLETON}]
            description: 'Indicate the master is syncing to the replica'
            preprocessing:
              - type: JSONPATH
                params: '$.Replication.master_sync_in_progress'

          - _prototype: redis._unsigned
            name: 'Slave replication offset{#SINGLETON}'
            key: redis.replication.slave_repl_offset[{#SINGLETON}]
            units: B
            description: 'The replication offset of the replica instance'
            preprocessing:
              - type: JSONPATH
                params: '$.Replication.slave_repl_offset'

          - _prototype: redis._unsigned
            name: 'Slave priority{#SINGLETON}'
            key: redis.replication.slave_priority[{#SINGLETON}]
            description: 'The priority of the instance as a candidate for failover'
            preprocessing:
              - type: JSONPATH
                params: '$.Replication.slave_priority'

          - _prototype: redis._unsigned
            name: 'Slave priority{#SINGLETON}'
            key: redis.replication.slave_read_only[{#SINGLETON}]
            description: 'Flag indicating if the replica is read-only'
            preprocessing:
              - type: JSONPATH
                params: '$.Replication.slave_read_only'
              - type: DISCARD_UNCHANGED_HEARTBEAT
                params: 1d

        ### Replication metrics discovery ###
        ###########################################
      - name: 'Replication metrics discovery'
        description: |
          If the instance is the master and the slaves are connected, additional metrics are provided

        key: redis.replication.master.discovery
        type: DEPENDENT
        masterItem: redis.info

        preprocessing:
          - type: JAVASCRIPT
            params: |-
              return JSON.stringify(Object.keys(JSON.parse(value).Replication)
                .filter(function (v) {return v.match(/slave\d+/)})
                .map(function (v){return {"{#SLAVE}": v}}));

        items:
          - _prototype: redis._unsigned
            _resource: '{#SLAVE}'
            name: 'Replication lag in bytes'
            key: redis.replication.lag_bytes["{#SLAVE}"]
            units: B
            description: 'Replication lag in bytes'
            application_prototype: 'Redis: {#SLAVE}'
            preprocessing:
              - type: JAVASCRIPT
                params: |-
                  var repl = JSON.parse(value).Replication;
                  return repl.master_repl_offset - repl["{#SLAVE}"].offset
            graphs:
              - _id: redis.replications.bytes
                name: '{#SLAVE}: Replication lag bytes'
                graph_items:
                  - name: 'redis.replication.lag_bytes["{#SLAVE}"]'
                    drawtype: BOLD_LINE

          - _prototype: redis._char
            _resource: '{#SLAVE}'
            name: 'IP address'
            key: redis.replication.slave_ip["{#SLAVE}"]
            description: 'Slave ip address'
            application_prototype: 'Redis: {#SLAVE}'
            preprocessing:
              - type: JSONPATH
                params: '$.Replication["{#SLAVE}"].ip'
              - type: DISCARD_UNCHANGED_HEARTBEAT
                params: 1d
            # triggers:
            #   - _id: trigger.redis.slave_ip.changed
            #     name: '{#SLAVE}: IP address or port has been changed'
            #     expression: '({TEMPLATE_NAME:METRIC.diff()}=1 or {TEMPLATE_NAME:__redis.slave_port__.diff()}=1) and {TEMPLATE_NAME:METRIC.strlen()}>0'
            #     description: '__RESOURCE__ Slave IP address has changed. Ack to close.'
            #     recovery_mode: NONE
            #     manual_close: 'YES'
            #     priority: INFO

          - _prototype: redis._unsigned
            _id: redis.slave_port
            _resource: '{#SLAVE}'
            name: 'Port'
            key: redis.replication.slave_port["{#SLAVE}"]
            description: 'Slave port number'
            application_prototype: 'Redis: {#SLAVE}'
            preprocessing:
              - type: JSONPATH
                params: '$.Replication["{#SLAVE}"].port'
            # triggers:
            #   - _id: trigger.redis.slave_port.change
            #     name: '{#SLAVE}: port has changed'
            #     expression: '{TEMPLATE_NAME:METRIC.diff()}=1'
            #     description: '__RESOURCE__ Slave port has changed. Ack to close.'
            #     recovery_mode: NONE
            #     manual_close: 'YES'
            #     priority: INFO



        ### Process metrics discovery ###
        #################################
      - name: 'Process metrics discovery'
        description: |
          Collect metrics by Zabbix agent if it exists

        key: proc.num["{$REDIS.LLD.PROCESS_NAME}"]
        type: ZABBIX_PASSIVE
        preprocessing:
          - type: JAVASCRIPT
            params: |-
              return JSON.stringify(value > 0 ? [{'{#SINGLETON}': ''}] : []);

        items:
          - _id: redis.process.num
            _prototype: proc.num
            key: proc.num["{$REDIS.PROCESS_NAME}{#SINGLETON}"]
            _group: Redis
            _resource: Redis

          - _id: redis.proc.mem.rss
            _prototype: proc.mem.rss
            key: 'proc.mem["{$REDIS.PROCESS_NAME}{#SINGLETON}",,,,rss]'
            _group: Redis
            _resource: Redis

          - _id: redis.proc.mem.vsize
            _prototype: proc.mem.vsize
            key: 'proc.mem["{$REDIS.PROCESS_NAME}{#SINGLETON}",,,,vsize]'
            _group: Redis
            _resource: Redis
            graphs:
              - name: 'Memory usage{#SINGLETON}'
                graphtype: NORMAL
                graph_items:
                  - name: proc.mem.vsize
                  - name: proc.mem.rss

          - _id: redis.proc.cpu.util
            _prototype: proc.cpu.util
            key: 'proc.cpu.util["{$REDIS.PROCESS_NAME}{#SINGLETON}"]'
            _group: Redis
            _resource: Redis

      ### Metrics for Redis version below 5 ###
      #########################################
      # - name: 'Old metrics discovery'
      #   description: |
      #     Metrics for Redis version below 5

      #   key: redis.metrics.old.discovery
      #   type: DEPENDENT
      #   masterItem: redis.info
      #   preprocessing:
      #     - type: JSONPATH
      #       params: '$.Server.redis_version'
      #     - type: JAVASCRIPT
      #       params: |-
      #         return JSON.stringify(parseInt(value.split('.')[0]) < 5 ? [{'{#SINGLETON}': ''}] : []);

      #   items:
      #     - _prototype: redis._unsigned
      #       name: Max output buffer
      #       key: redis.clients.client_longest_output_list
      #       description: The longest output list among current client connections
      #       preprocessing:
      #         - type: JSONPATH
      #           params: '$.Clients.client_longest_output_list'

      #     - _prototype: redis._unsigned
      #       name: Max input buffer
      #       key: redis.clients.client_biggest_input_buf
      #       description: The biggest input buffer among current client connections
      #       preprocessing:
      #         - type: JSONPATH
      #           params: '$.Clients.client_biggest_input_buf'


      ### Metrics for Redis version 4 and above ###
      ###################################
      - name: 'Version 4+ metrics discovery'
        description: |
          Additional metrics for versions 4+

        key: redis.metrics.v4.discovery
        type: DEPENDENT
        masterItem: redis.info
        preprocessing:
          - type: JSONPATH
            params: '$.Server.redis_version'
          - type: JAVASCRIPT
            params: |-
              return JSON.stringify(parseInt(value.split('.')[0]) >= 4 ? [{'{#SINGLETON}': ''}] : []);

        items:
          - _prototype: redis._char
            name: 'Executable path{#SINGLETON}'
            key: 'redis.server.executable[{#SINGLETON}]'
            description: 'The path to the server''s executable'
            preprocessing:
              - type: JSONPATH
                params: '$.Server.executable'
              - type: DISCARD_UNCHANGED_HEARTBEAT
                params: 1d

          - _prototype: redis._float
            name: 'Memory used peak %{#SINGLETON}'
            key: 'redis.memory.used_memory_peak_perc[{#SINGLETON}]'
            units: '%'
            description: 'The percentage of used_memory_peak out of used_memory'
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.used_memory_peak_perc'
              - type: REGEX
                params: "(.+)%\n\\1"

          - _prototype: redis._unsigned
            name: 'Memory used overhead{#SINGLETON}'
            key: 'redis.memory.used_memory_overhead[{#SINGLETON}]'
            units: B
            description: 'The sum in bytes of all overheads that the server allocated for managing its internal data structures'
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.used_memory_overhead'

          - _prototype: redis._unsigned
            name: 'Memory used startup{#SINGLETON}'
            key: 'redis.memory.used_memory_startup[{#SINGLETON}]'
            units: B
            description: 'Initial amount of memory consumed by Redis at startup in bytes'
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.used_memory_startup'

          - _prototype: redis._unsigned
            name: 'Memory used dataset{#SINGLETON}'
            key: 'redis.memory.used_memory_dataset[{#SINGLETON}]'
            units: B
            description: 'The size in bytes of the dataset'
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.used_memory_dataset'

          - _prototype: redis._float
            name: 'Memory used dataset %{#SINGLETON}'
            key: 'redis.memory.used_memory_dataset_perc[{#SINGLETON}]'
            units: '%'
            description: 'The percentage of used_memory_dataset out of the net memory usage (used_memory minus used_memory_startup)'
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.used_memory_dataset_perc'
              - type: REGEX
                params: "(.+)%\n\\1"

          - _prototype: redis._unsigned
            name: 'Total system memory{#SINGLETON}'
            key: 'redis.memory.total_system_memory[{#SINGLETON}]'
            units: B
            description: 'The total amount of memory that the Redis host has'
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.total_system_memory'

          - _prototype: redis._unsigned
            name: 'Max memory{#SINGLETON}'
            key: 'redis.memory.maxmemory[{#SINGLETON}]'
            units: B
            description: 'Maximum amount of memory allocated to the Redisdb system'
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.maxmemory'
            triggers:
              - name: 'Memory usage is too high (over {$REDIS.MEM.PUSED.MAX.WARN}% in 5m)'
                # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                # Временный костыль с абсолютной ссылкой на метрику в шаблоне. Разобрать с Виталием.
                # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                expression: '{TEMPLATE_NAME:METRIC.min(5m)}/{Template DB Redis:redis.memory.used_memory.last()}*100>{$REDIS.MEM.PUSED.MAX.WARN}'
                priority: WARNING

          - _prototype: redis._char
            name: 'Max memory policy{#SINGLETON}'
            key: 'redis.memory.maxmemory_policy[{#SINGLETON}]'
            description: 'The value of the maxmemory-policy configuration directive'
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.maxmemory_policy'
              - type: DISCARD_UNCHANGED_HEARTBEAT
                params: 1d

          - _prototype: redis._unsigned
            name: 'Active defrag running{#SINGLETON}'
            key: 'redis.memory.active_defrag_running[{#SINGLETON}]'
            description: 'Flag indicating if active defragmentation is active'
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.active_defrag_running'

          - _prototype: redis._unsigned
            name: 'Lazyfree pending objects{#SINGLETON}'
            key: 'redis.memory.lazyfree_pending_objects[{#SINGLETON}]'
            description: 'The number of objects waiting to be freed (as a result of calling UNLINK, or FLUSHDB and FLUSHALL with the ASYNC option)'
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.lazyfree_pending_objects'

          - _prototype: redis._unsigned
            name: 'RDB last cow size{#SINGLETON}'
            key: 'redis.persistence.rdb_last_cow_size[{#SINGLETON}]'
            units: B
            description: 'The size in bytes of copy-on-write allocations during the last RDB save operation'
            preprocessing:
              - type: JSONPATH
                params: '$.Persistence.rdb_last_cow_size'

          - _prototype: redis._unsigned
            name: 'AOF last cow size{#SINGLETON}'
            key: 'redis.persistence.aof_last_cow_size[{#SINGLETON}]'
            units: B
            description: 'The size in bytes of copy-on-write allocations during the last AOF rewrite operation'
            preprocessing:
              - type: JSONPATH
                params: '$.Persistence.aof_last_cow_size'

          - _prototype: redis._float
            name: 'Expired stale %{#SINGLETON}'
            key: 'redis.stats.expired_stale_perc[{#SINGLETON}]'
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Stats.expired_stale_perc'

          - _prototype: redis._unsigned
            name: 'Expired time cap reached count{#SINGLETON}'
            key: 'redis.stats.expired_time_cap_reached_count[{#SINGLETON}]'
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Stats.expired_time_cap_reached_count'

          - _prototype: redis._unsigned
            name: 'Slave expires tracked keys{#SINGLETON}'
            key: 'redis.stats.slave_expires_tracked_keys[{#SINGLETON}]'
            description: 'The number of keys tracked for expiry purposes (applicable only to writable replicas)'
            preprocessing:
              - type: JSONPATH
                params: '$.Stats.slave_expires_tracked_keys'

          - _prototype: redis._unsigned
            name: 'Active defrag hits{#SINGLETON}'
            key: 'redis.stats.active_defrag_hits[{#SINGLETON}]'
            description: 'Number of value reallocations performed by active the defragmentation process'
            preprocessing:
              - type: JSONPATH
                params: '$.Stats.active_defrag_hits'

          - _prototype: redis._unsigned
            name: 'Active defrag misses{#SINGLETON}'
            key: 'redis.stats.active_defrag_misses[{#SINGLETON}]'
            description: 'Number of aborted value reallocations started by the active defragmentation process'
            preprocessing:
              - type: JSONPATH
                params: '$.Stats.active_defrag_misses'

          - _prototype: redis._unsigned
            name: 'Active defrag key hits{#SINGLETON}'
            key: 'redis.stats.active_defrag_key_hits[{#SINGLETON}]'
            description: 'Number of keys that were actively defragmented'
            preprocessing:
              - type: JSONPATH
                params: '$.Stats.active_defrag_key_hits'

          - _prototype: redis._unsigned
            name: 'Active defrag key misses{#SINGLETON}'
            key: 'redis.stats.active_defrag_key_misses[{#SINGLETON}]'
            description: 'Number of keys that were skipped by the active defragmentation process'
            preprocessing:
              - type: JSONPATH
                params: '$.Stats.active_defrag_key_misses'

          # - _prototype: redis._char
          #   name: 'Master replication id{#SINGLETON}'
          #   key: 'redis.replication.master_replid[{#SINGLETON}]'
          #   description: ''
          #   preprocessing:
          #     - type: JSONPATH
          #       params: '$.Replication.master_replid'
          #     - type: DISCARD_UNCHANGED_HEARTBEAT
          #       params: 1d

          # - _prototype: redis._char
          #   name: 'Master replication id 2{#SINGLETON}'
          #   key: 'redis.replication.master_replid2[{#SINGLETON}]'
          #   description: ''
          #   preprocessing:
          #     - type: JSONPATH
          #       params: '$.Replication.master_replid2'
          #     - type: DISCARD_UNCHANGED_HEARTBEAT
          #       params: 1d

          - _prototype: redis._float
            name: 'Replication second offset{#SINGLETON}'
            key: 'redis.replication.second_repl_offset[{#SINGLETON}]'
            units: B
            value_map: Redis repl offset
            description: 'Offset up to which replication IDs are accepted'
            preprocessing:
              - type: JSONPATH
                params: '$.Replication.second_repl_offset'


      ### Metrics for Redis version 5 ###
      ###################################
      - name: 'Version 5+ metrics discovery'
        description: |
          Additional metrics for versions 5+

        key: redis.metrics.v5.discovery
        type: DEPENDENT
        masterItem: redis.info
        preprocessing:
          - type: JSONPATH
            params: '$.Server.redis_version'
          - type: JAVASCRIPT
            params: |-
              return JSON.stringify(parseInt(value.split('.')[0]) >= 5 ? [{'{#SINGLETON}': ''}] : []);

        items:
          - _prototype: redis._unsigned
            name: 'Allocator active{#SINGLETON}'
            key: 'redis.memory.allocator_active[{#SINGLETON}]'
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.allocator_active'

          - _prototype: redis._unsigned
            name: 'Allocator allocated{#SINGLETON}'
            key: 'redis.memory.allocator_allocated[{#SINGLETON}]'
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.allocator_allocated'

          - _prototype: redis._unsigned
            name: 'Allocator resident{#SINGLETON}'
            key: 'redis.memory.allocator_resident[{#SINGLETON}]'
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.allocator_resident'

          - _prototype: redis._unsigned
            name: 'Memory used scripts{#SINGLETON}'
            key: 'redis.memory.used_memory_scripts[{#SINGLETON}]'
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.used_memory_scripts'

          - _prototype: redis._unsigned
            name: 'Memory number of cached scripts{#SINGLETON}'
            key: 'redis.memory.number_of_cached_scripts[{#SINGLETON}]'
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.number_of_cached_scripts'

          - _prototype: redis._unsigned
            name: 'Allocator fragmentation bytes{#SINGLETON}'
            key: 'redis.memory.allocator_frag_bytes[{#SINGLETON}]'
            units: B
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.allocator_frag_bytes'

          - _prototype: redis._float
            name: 'Allocator fragmentation ratio{#SINGLETON}'
            key: 'redis.memory.allocator_frag_ratio[{#SINGLETON}]'
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.allocator_frag_ratio'

          - _prototype: redis._unsigned
            name: 'Allocator RSS bytes{#SINGLETON}'
            key: 'redis.memory.allocator_rss_bytes[{#SINGLETON}]'
            units: B
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.allocator_rss_bytes'

          - _prototype: redis._float
            name: 'Allocator RSS ratio{#SINGLETON}'
            key: 'redis.memory.allocator_rss_ratio[{#SINGLETON}]'
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.allocator_rss_ratio'

          - _prototype: redis._float
            name: 'Memory RSS overhead bytes{#SINGLETON}'
            key: 'redis.memory.rss_overhead_bytes[{#SINGLETON}]'
            units: B
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.rss_overhead_bytes'

          - _prototype: redis._float
            name: 'Memory RSS overhead ratio{#SINGLETON}'
            key: 'redis.memory.rss_overhead_ratio[{#SINGLETON}]'
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.rss_overhead_ratio'

          - _prototype: redis._unsigned
            name: 'Memory fragmentation bytes{#SINGLETON}'
            key: 'redis.memory.fragmentation_bytes[{#SINGLETON}]'
            units: B
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.mem_fragmentation_bytes'
            graphs:
              - _id: redis.memory_frag
                name: Memory fragmentation{#SINGLETON}
                graph_items:
                  - name: 'redis.memory.fragmentation_bytes[{#SINGLETON}]'
                    drawtype: BOLD_LINE
                  - name: 'redis.memory.fragmentation_ratio[{#SINGLETON}]'
                    drawtype: BOLD_LINE

          - _prototype: redis._float
            name: 'Memory fragmentation ratio{#SINGLETON}'
            key: 'redis.memory.fragmentation_ratio[{#SINGLETON}]'
            description: 'Ratio between used_memory_rss and used_memory'
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.mem_fragmentation_ratio'
            triggers:
              - name: 'Memory fragmentation ratio is too high (over {$REDIS.MEM.FRAG_RATIO.MAX.WARN} in 5m)'
                expression: '{TEMPLATE_NAME:METRIC.min(5m)}>{$REDIS.MEM.FRAG_RATIO.MAX.WARN}'
                priority: WARNING

          - _prototype: redis._unsigned
            name: 'Memory not counted for evict{#SINGLETON}'
            key: 'redis.memory.not_counted_for_evict[{#SINGLETON}]'
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.mem_not_counted_for_evict'

          - _prototype: redis._unsigned
            name: 'Memory replication backlog{#SINGLETON}'
            key: 'redis.memory.replication_backlog[{#SINGLETON}]'
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.mem_replication_backlog'

          - _prototype: redis._unsigned
            name: 'Memory clients normal{#SINGLETON}'
            key: 'redis.memory.mem_clients_normal[{#SINGLETON}]'
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.mem_clients_normal'

          - _prototype: redis._unsigned
            name: 'Memory clients slaves{#SINGLETON}'
            key: 'redis.memory.mem_clients_slaves[{#SINGLETON}]'
            description: ''
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.mem_clients_slaves'

          - _prototype: redis._unsigned
            name: 'Memory AOF buffer{#SINGLETON}'
            key: 'redis.memory.mem_aof_buffer[{#SINGLETON}]' 
            description: 'Size of the AOF buffer'
            preprocessing:
              - type: JSONPATH
                params: '$.Memory.mem_aof_buffer'


    macros:
      - macro: '{$REDIS.CONN.URI}'
        value: 'tcp://localhost:6379'
        description: 'Connection string in the URI format (password is not used). This param overwrites a value configured in the "Server" option of the configuration file (if it''s set), otherwise, the plugin''s default value is used: "tcp://localhost:6379"'

      - macro: '{$REDIS.PROCESS_NAME}'
        value: 'redis-server'
        description: 'Redis server process name'

      - macro: '{$REDIS.LLD.PROCESS_NAME}'
        value: 'redis-server'
        description: 'Redis server process name for LLD'

      - macro: '{$REDIS.LLD.FILTER.DB.MATCHES}'
        value: '.*'
        _description: 'Filter of discoverable databases'

      - macro: '{$REDIS.LLD.FILTER.DB.NOT_MATCHES}'
        value: 'CHANGE_IF_NEEDED'
        _description: 'Filter to exclude discovered databases'

      - macro: '{$REDIS.REPL.LAG.MAX.WARN}'
        value: 30s
        _description: Maximum replication lag in seconds

      # - macro: '{$REDIS.REPL.LAG_BYTES.MAX.WARN}'
      #   value: 30s
      #   _description: Maximum replication lag in bytes

      - macro: '{$REDIS.SLOWLOG.COUNT.MAX.WARN}'
        value: 1
        _description: Maximum number of slowlog entries per second

      - macro: '{$REDIS.CLIENTS.PRC.MAX.WARN}'
        value: 80
        _description: Maximum percentage of connected clients

      - macro: '{$REDIS.MEM.PUSED.MAX.WARN}'
        value: 90
        _description: Maximum percentage of memory used

      - macro: '{$REDIS.MEM.FRAG_RATIO.MAX.WARN}'
        value: 1.5
        description: Maximum memory fragmentation ratio


value_maps:
  - name: Service state
    mappings:
      - value: "0"
        newvalue: Down
      - value: "1"
        newvalue: Up

  - name: Redis bgwrite status
    mappings:
      - value: "0"
        newvalue: Error
      - value: "1"
        newvalue: Ok

  - name: Redis flag
    mappings:
      - value: "0"
        newvalue: No
      - value: "1"
        newvalue: Yes

  - name: Redis repl offset
    mappings:
      - value: "-1 B"
        newvalue: Undefined

  - name: Redis bgsave time
    mappings:
      - value: "- 1s"
        newvalue: Inactive
