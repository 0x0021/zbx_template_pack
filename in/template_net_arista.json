{
    "templates": [
        {
            "_classes": [
                "INVENTORY",
                "PERFORMANCE",
                "FAULT",
                "INTERFACES",
                "NETWORK",
                "SNMP_DEVICE",
                "SNMPv2",
                "Interfaces EtherLike Extension"
            ],
            "name": "Template Net Arista",
            "description": "Template Net Arista",
            "_documentation": {
                "_known_devices": [
                    {
                        "name": "Arista DCS-7050Q-16",
                        "version": "EOS version 4.12.6",
                        "oid": ".1.3.6.1.4.1.30065.1.3011.7050.2512.16"
                    }
                ]
            },
            "discovery_rules": [
                {
                    "name": "Temperature discovery",
                    "snmp_oid": "discovery[{#SENSOR_TYPE},1.3.6.1.2.1.99.1.1.1.1,{#SENSOR_INFO},1.3.6.1.2.1.47.1.1.1.1.2,{#SENSOR_PRECISION},1.3.6.1.2.1.99.1.1.1.3]",
                    "key": "temp.discovery",
                    "description": "ENTITY-SENSORS-MIB::EntitySensorDataType discovery with celsius filter",
                    "filter": {
                        "evaltype": "AND",
                        "conditions": [
                            {
                                "macro": "{#SENSOR_TYPE}", //<!-- celsius -->
                                "value": "8",
                                "formulaid": "B"
                            },
                            {
                                "macro": "{#SENSOR_PRECISION}",
                                "value": "1", //<!-- limit only to precision 1 (like 10.1) -->
                                "formulaid": "B"
                            }
                        ]
                        /*
                            <!-- An object using this data type represents the Entity Sensor
                            measurement data type associated with a physical sensor
                            value. The actual data units are determined by examining an
                            object of this type together with the associated
                            EntitySensorDataScale object.An object of this type SHOULD be defined together with
                            objects of type EntitySensorDataScale andEntitySensorPrecision.  Together, associated objects of
                            these three types are used to identify the semantics of an
                            object of type EntitySensorValue.Valid values are:
                            other(1):        a measure other than those listed below
                            unknown(2):      unknown measurement, or arbitrary,relative numbers
                            voltsAC(3):      electric potential
                            voltsDC(4):      electric potential
                            amperes(5):      electric current
                            watts(6):        power
                            hertz(7):        frequency   celsius(8):
                            temperature
                            percentRH(9):    percent relative humidity
                            rpm(10):         shaft revolutions per minute
                            cmm(11),:        cubic meters per minute (airflow)
                            truthvalue(12):  value takes { true(1), false(2) }                        
                        */
                    },
                    "items": [
                        {
                            "_prototype": "sensor.temp.value",
                            "oid": "1.3.6.1.2.1.99.1.1.1.4.{#SNMPINDEX}",
                            "_snmpObject": "entPhySensorValue.{#SNMPINDEX}",
                            "_mib": "ENTITY-SENSORS-MIB", //<!-- rpm -->
                            "_vendor_description": "The most recent measurement obtained by the agent for this sensor.\r\nTo correctly interpret the value of this object, the associated entPhySensorType,\r\nentPhySensorScale, and entPhySensorPrecision objects must also be examined.",
                            "_resource": "{#SENSOR_INFO}",
                            "preprocessing": [
                                {
                                    "type": "MULTIPLIER",
                                    "params": "0.1"
                                }
                            ],
                            "triggers": [
                                {
                                    "_prototype": "tempWarn.combined"
                                },
                                {
                                    "_prototype": "tempCrit"
                                },
                                {
                                    "_prototype": "tempLow"
                                }
                            ]
                        },
                        {
                            "_prototype": "sensor.temp.status",
                            "oid": "1.3.6.1.2.1.99.1.1.1.5.{#SNMPINDEX}",
                            "_snmpObject": "entPhySensorOperStatus.{#SNMPINDEX}",
                            "_mib": "ENTITY-SENSORS-MIB",
                            "_vendor_description": "The operational status of the sensor {#SENSOR_INFO}",
                            "_resource": "{#SENSOR_INFO}",
                            "valueMap": "ENTITY-SENSORS-MIB::EntitySensorStatus"
                        }
                    ]
                },
                {
                    "name": "Fan discovery",
                    "snmp_oid": "discovery[{#SNMPVALUE},1.3.6.1.2.1.99.1.1.1.1,{#SENSOR_INFO},1.3.6.1.2.1.47.1.1.1.1.2]",
                    "key": "fan.discovery",
                    "description": "ENTITY-SENSORS-MIB::EntitySensorDataType discovery with rpm filter",
                    "filter": {
                        "evaltype": "OR",
                        "conditions": [
                            {
                                "macro": "{#SNMPVALUE}",
                                "value": "10",
                                "formulaid": "B"
                            }
                        ]
                    },
                    "items": [
                        {
                            "_prototype": "sensor.fan.speed",
                            "oid": "1.3.6.1.2.1.99.1.1.1.4.{#SNMPINDEX}",
                            "_snmpObject": "entPhySensorValue.{#SNMPINDEX}",
                            "_mib": "ENTITY-SENSORS-MIB",
                            "_vendor_description": "The most recent measurement obtained by the agent for this sensor.\r\nTo correctly interpret the value of this object, the associated entPhySensorType,\r\nentPhySensorScale, and entPhySensorPrecision objects must also be examined.",
                            "_resource": "{#SENSOR_INFO}"
                        },
                        {
                            "_prototype": "sensor.fan.status",
                            "oid": "1.3.6.1.2.1.99.1.1.1.5.{#SNMPINDEX}",
                            "_snmpObject": "entPhySensorOperStatus.{#SNMPINDEX}",
                            "_mib": "ENTITY-SENSORS-MIB",
                            "_vendor_description": "The operational status of the sensor {#SENSOR_INFO}",
                            "_resource": "{#SENSOR_INFO}",
                            "valueMap": "ENTITY-SENSORS-MIB::EntitySensorStatus",
                            "triggers": [
                                {
                                    "_prototype": "fan.crit"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Entity discovery",
                    "snmp_oid": "discovery[{#ENT_CLASS},1.3.6.1.2.1.47.1.1.1.1.5,{#ENT_NAME},1.3.6.1.2.1.47.1.1.1.1.7]",
                    "key": "entity.discovery",
                    "filter": {
                        "evaltype": "AND_OR",
                        "conditions": [
                            {
                                "macro": "{#ENT_CLASS}",
                                "value": "3", //<!-- 3 - chassis-->
                                "formulaid": "A"
                            }
                        ]
                    },
                    "items": [
                        {
                            "_prototype": "system.hw.model",
                            "oid": "1.3.6.1.2.1.47.1.1.1.1.13.{#SNMPINDEX}",
                            "_snmpObject": "entPhysicalModelName.{#SNMPINDEX}",
                            "_mib": "ENTITY-MIB",
                            "_resource": "{#ENT_NAME}"
                        },
                        {
                            "_prototype": "system.hw.serialnumber",
                            "oid": "1.3.6.1.2.1.47.1.1.1.1.11.{#SNMPINDEX}",
                            "_snmpObject": "entPhysicalSerialNum.{#SNMPINDEX}",
                            "_mib": "ENTITY-MIB",
                            "_resource": "{#ENT_NAME}"
                        }
                    ]
                },
                {
                    "name": "PSU discovery",
                    "snmp_oid": "discovery[{#ENT_CLASS},1.3.6.1.2.1.47.1.1.1.1.5,{#ENT_NAME},1.3.6.1.2.1.47.1.1.1.1.7]",
                    "key": "psu.discovery",
                    "filter": {
                        "evaltype": "AND_OR",
                        "conditions": [
                            {
                                "macro": "{#ENT_CLASS}",
                                "value": "6",
                                "formulaid": "A"
                            }
                        ]
                    },
                    "items": [
                        {
                            "_prototype": "sensor.psu.status",
                            "oid": "1.3.6.1.2.1.131.1.1.1.3.{#SNMPINDEX}",
                            "_snmpObject": "entStateOper.{#SNMPINDEX}",
                            "_mib": "ENTITY-STATE-MIB",
                            "_resource": "{#ENT_NAME}",
                            "valueMap": "ENTITY-STATE-MIB::EntityOperState",
                            "triggers": [
                                {
                                    "_prototype": "psu.crit"
                                }
                            ]
                        }
                    ]
                }
            ],
            "items": [],
            "templates": [
                "Template Module HOST-RESOURCES-MIB SNMPvX"
            ],
            "macros": [
                {
                    "macro": "{$PSU_CRIT_STATUS}",
                    "value": "2"
                },
                {
                    "macro": "{$FAN_CRIT_STATUS}",
                    "value": "3"
                },
                {
                    "macro": "{$TEMP_WARN_STATUS}",
                    "value": "3"
                },
                {
                    "macro": "{$VFS.FS.PUSED.MAX.WARN}",
                    "value": "90"
                },
                {
                    "macro": "{$VFS.FS.PUSED.MAX.CRIT}",
                    "value": "95"
                }
            ]
        }
    ],
    "value_maps": [
        {
            "name": "ENTITY-STATE-MIB::EntityOperState",
            "mappings": [
                {
                    "value": "1",
                    "newvalue": "unknown"
                },
                {
                    "value": "2",
                    "newvalue": "disabled"
                },
                {
                    "value": "3",
                    "newvalue": "enabled"
                },
                {
                    "value": "4",
                    "newvalue": "testing"
                }
            ]
        },
        {
            "name": "ENTITY-SENSORS-MIB::EntitySensorStatus",
            "mappings": [
                {
                    "value": "1",
                    "newvalue": "ok"
                },
                {
                    "value": "2",
                    "newvalue": "unavailable"
                },
                {
                    "value": "3",
                    "newvalue": "nonoperational"
                }
            ]
        }
    ]
}