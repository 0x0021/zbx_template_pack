<?xml version="1.0" encoding="UTF-8"?>
<root xmlns="http://www.example.org/zbx_template_new/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.example.org/zbx_template_new/ ../../src/main/resources/templates/metrics.xsd">
	<template>
		<classes>
			<class>Inventory</class>
			<class>Performance</class>
			<class>Fault</class>
			<class>Interfaces</class>
			<class>Network</class>
			<class>SNMP Device</class>
			<class>SNMPv2</class>
		</classes>
		<name>Template Net Mellanox</name>
		<description>Template Net Mellanox</description>
		<sysObjectID>{oid}</sysObjectID>
		<discoveryRules>
			<discoveryRule>
				<name>Temperature Discovery</name>
				<snmp_oid>discovery[{#SENSOR_TYPE},1.3.6.1.2.1.99.1.1.1.1,{#SENSOR_INFO},1.3.6.1.2.1.47.1.1.1.1.2,{#SENSOR_PRECISION},1.3.6.1.2.1.99.1.1.1.3]</snmp_oid>
				<key>temp.discovery</key>
				<description>ENTITY-SENSORS-MIB::EntitySensorDataType discovery with celsius filter</description>
				<filter>
					<evaltype>1</evaltype>
					<formula/>
					<conditions>
						<condition>
							<macro>{#SENSOR_TYPE}</macro>
							<value>8</value><!-- celsius -->
							<operator>8</operator>
							<formulaid>B</formulaid>
						</condition>
						<condition>
							<macro>{#SENSOR_PRECISION}</macro>
							<value>1</value><!-- limit only to precision 1 (like 10.1) -->
							<operator>8</operator>
							<formulaid>B</formulaid>
						</condition>
					</conditions>
				</filter>
				<!-- An object using this data type represents the Entity Sensor
                measurement data type associated with a physical sensor
                value. The actual data units are determined by examining an
                object of this type together with the associated
                EntitySensorDataScale object.An object of this type SHOULD be defined together with
                objects of type EntitySensorDataScale andEntitySensorPrecision.  Together, associated objects of
                these three types are used to identify the semantics of an
                object of type EntitySensorValue.Valid values are:
                   other(1):        a measure other than those listed below
                   unknown(2):      unknown measurement, or arbitrary,relative numbers
                   voltsAC(3):      electric potential
                   voltsDC(4):      electric potential
                   amperes(5):      electric current
                   watts(6):        power
                   hertz(7):        frequency   celsius(8):
                   temperature
                   percentRH(9):    percent relative humidity
                   rpm(10):         shaft revolutions per minute
                   cmm(11),:        cubic meters per minute (airflow)
                   truthvalue(12):  value takes { true(1), false(2) }
 -->
			</discoveryRule>

			<discoveryRule>
				<name>Fan Discovery</name>
				<snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.2.1.99.1.1.1.1,{#SENSOR_INFO},1.3.6.1.2.1.47.1.1.1.1.2]</snmp_oid>
				<key>fan.discovery</key>
				<description>ENTITY-SENSORS-MIB::EntitySensorDataType discovery with rpm filter</description>
				<filter>
					<evaltype>2</evaltype>
					<formula/>
					<conditions>
						<condition>
							<macro>{#SNMPVALUE}</macro>
							<value>10</value><!-- rpm -->
							<operator>8</operator>
							<formulaid>B</formulaid>
						</condition>
					</conditions>
				</filter>
			</discoveryRule>
			<discoveryRule>
				<name>Entity Discovery</name>
				<snmp_oid>discovery[{#ENT_CLASS},1.3.6.1.2.1.47.1.1.1.1.5,{#ENT_NAME},1.3.6.1.2.1.47.1.1.1.1.7]</snmp_oid>
				<key>entity.discovery</key>
				<filter>
					<evaltype>0</evaltype>
					<formula/>
					<conditions>
						<condition>
							<macro>{#ENT_CLASS}</macro>
							<value>3</value><!-- 3 - chassis-->
							<operator>8</operator>
							<formulaid>A</formulaid>
						</condition>
					</conditions>
				</filter>
			</discoveryRule>
			<discoveryRule>
				<name>PSU Discovery</name>
				<snmp_oid>discovery[{#ENT_CLASS},1.3.6.1.2.1.47.1.1.1.1.5,{#ENT_NAME},1.3.6.1.2.1.47.1.1.1.1.7]</snmp_oid>
				<key>psu.discovery</key>
				<filter>
					<evaltype>0</evaltype>
					<formula/>
					<conditions>
						<condition>
							<macro>{#ENT_CLASS}</macro>
							<value>6</value><!-- 3 - chassis-->
							<operator>8</operator>
							<formulaid>A</formulaid>
						</condition>
					</conditions>
				</filter>
			</discoveryRule>
		</discoveryRules>
		<metrics>
			<sensor.temp.value>
				<oid>1.3.6.1.2.1.99.1.1.1.4.{#SNMPINDEX}</oid>
				<snmpObject>entPhySensorValue.{#SNMPINDEX}</snmpObject>
				<mib>ENTITY-SENSORS-MIB</mib>
				<vendorDescription>The most recent measurement obtained by the agent for this sensor.
					To correctly interpret the value of this object, the associated entPhySensorType,
					entPhySensorScale, and entPhySensorPrecision objects must also be examined.</vendorDescription>
				<discoveryRule>Temperature Discovery</discoveryRule>
				<alarmObject>{#SENSOR_INFO}</alarmObject>
				<preprocessing>
					<step>
						<type>multiplier</type>
						<params>0.1</params>
					</step>
				</preprocessing>
			</sensor.temp.value>
			<sensor.temp.status>
				<oid>1.3.6.1.2.1.99.1.1.1.5.{#SNMPINDEX}</oid>
				<snmpObject>entPhySensorOperStatus.{#SNMPINDEX}</snmpObject>
				<mib>ENTITY-SENSORS-MIB</mib>
				<vendorDescription>The operational status of the sensor {#SENSOR_INFO}</vendorDescription>
				<discoveryRule>Temperature Discovery</discoveryRule>
				<alarmObject>{#SENSOR_INFO}</alarmObject>
				<valueMap>ENTITY-SENSORS-MIB::EntitySensorStatus</valueMap>
			</sensor.temp.status>



			<sensor.fan.speed>
				<oid>1.3.6.1.2.1.99.1.1.1.4.{#SNMPINDEX}</oid>
				<snmpObject>entPhySensorValue.{#SNMPINDEX}</snmpObject>
				<mib>ENTITY-SENSORS-MIB</mib>
				<vendorDescription>The most recent measurement obtained by the agent for this sensor.
					To correctly interpret the value of this object, the associated entPhySensorType,
					entPhySensorScale, and entPhySensorPrecision objects must also be examined.</vendorDescription>
				<discoveryRule>Fan Discovery</discoveryRule>
				<alarmObject>{#SENSOR_INFO}</alarmObject>
			</sensor.fan.speed>
			<sensor.fan.status>
				<oid>1.3.6.1.2.1.99.1.1.1.5.{#SNMPINDEX}</oid>
				<snmpObject>entPhySensorOperStatus.{#SNMPINDEX}</snmpObject>
				<mib>ENTITY-SENSORS-MIB</mib>
				<vendorDescription>The operational status of the sensor {#SENSOR_INFO}</vendorDescription>
				<discoveryRule>Fan Discovery</discoveryRule>
				<alarmObject>{#SENSOR_INFO}</alarmObject>
				<valueMap>ENTITY-SENSORS-MIB::EntitySensorStatus</valueMap>
			</sensor.fan.status>

			<sensor.psu.status>
				<oid>1.3.6.1.2.1.131.1.1.1.3.{#SNMPINDEX}</oid>
				<snmpObject>entStateOper.{#SNMPINDEX}</snmpObject>
				<mib>ENTITY-STATE-MIB</mib>
				<discoveryRule>PSU Discovery</discoveryRule>
				<alarmObject>{#ENT_NAME}</alarmObject>
				<valueMap>ENTITY-STATE-MIB::EntityOperState</valueMap>
			</sensor.psu.status>

			<system.hw.model>
				<oid>1.3.6.1.2.1.47.1.1.1.1.13.{#SNMPINDEX}</oid>
				<snmpObject>entPhysicalModelName.{#SNMPINDEX}</snmpObject>
				<mib>ENTITY-MIB</mib>
				<discoveryRule>Entity Discovery</discoveryRule>
				<alarmObject>{#ENT_NAME}</alarmObject>
			</system.hw.model>
			<system.hw.serialnumber>
				<oid>1.3.6.1.2.1.47.1.1.1.1.11.{#SNMPINDEX}</oid>
				<snmpObject>entPhysicalSerialNum.{#SNMPINDEX}</snmpObject>
				<mib>ENTITY-MIB</mib>
				<discoveryRule>Entity Discovery</discoveryRule>
				<alarmObject>{#ENT_NAME}</alarmObject>
			</system.hw.serialnumber>
		</metrics>
		<templates>
			<template>
				<name>Template Module HOST-RESOURCES-MIB_SNMPvX</name>
			</template>
		</templates>
		<macros>
			<macro>
				<macro>{$PSU_CRIT_STATUS}</macro>
				<value>2</value><!-- disabled -->
			</macro>

			<macro>
				<macro>{$FAN_CRIT_STATUS}</macro>
				<value>3</value> <!-- nonoperational -->
			</macro>
			<macro>
				<macro>{$TEMP_WARN_STATUS}</macro>
				<value>3</value> <!-- nonoperational -->
			</macro>

		</macros>

	</template>

	<value_maps>
		<value_map>
			<!-- Name:  EntityOperState
      Type:  TEXTUAL-CONVENTION
      Module:  ENTITY-STATE-MIB


      Base syntax:  INTEGER
      Numerical syntax:  Integer (32bit)
      Composed syntax:  INTEGER
      Value list:   1: unknown(1)
      2: disabled(2)
      3: enabled(3)
      4: testing(4)
      Status:  current
      Description:   Represents the possible values of operational states. A value of 'disabled' means the resource is totally inoperable.  A value of 'enabled' means the resourceis partially or fully operable.  A value of 'testing'means the resource is currently being testedand cannot therefore report whether it is operationalor not.  A value of 'unknown' means that this resource is unable to report operational state.

             -->
			<name>ENTITY-STATE-MIB::EntityOperState</name>
			<mappings>
				<mapping>
					<value>1</value>
					<newvalue>unknown</newvalue>
				</mapping>
				<mapping>
					<value>2</value>
					<newvalue>disabled</newvalue>
				</mapping>
				<mapping>
					<value>3</value>
					<newvalue>enabled</newvalue>
				</mapping>
				<mapping>
					<value>4</value>
					<newvalue>testing</newvalue>
				</mapping>
			</mappings>
		</value_map>


		<value_map>
			<name>ENTITY-SENSORS-MIB::EntitySensorStatus</name>
			<mappings>
				<mapping>
					<value>1</value>
					<newvalue>ok</newvalue>
				</mapping>
				<mapping>
					<value>2</value>
					<newvalue>unavailable</newvalue>
				</mapping>
				<mapping>
					<value>3</value>
					<newvalue>nonoperational</newvalue>
				</mapping>
			</mappings>
		</value_map>

	</value_maps>
</root>
