---
templates:
  - name: Template OS Linux Memory
    _zbx_ver: "4.2"
    _classes:
      - SNMPv2
    items:
      - _prototype: vm.memory.free
        _snmpObject: memAvailReal.0
        oid: 1.3.6.1.4.1.2021.4.6.0
        _mib: UCD-SNMP-MIB
        type: SNMP
        preprocessing:
          - type: MULTIPLIER
            params: "1024"
      - _prototype: vm.memory.buffers
        _snmpObject: memBuffer.0
        oid: 1.3.6.1.4.1.2021.4.14.0
        _mib: UCD-SNMP-MIB
        type: SNMP
        preprocessing:
          - type: MULTIPLIER
            params: "1024"
      - _prototype: vm.memory.cached
        _snmpObject: memCached.0
        oid: 1.3.6.1.4.1.2021.4.15.0
        _mib: UCD-SNMP-MIB
        type: SNMP
        preprocessing:
          - type: MULTIPLIER
            params: "1024"
      - _prototype: vm.memory.total
        _snmpObject: memTotalReal.0
        oid: 1.3.6.1.4.1.2021.4.5.0
        _mib: UCD-SNMP-MIB
        type: SNMP
        preprocessing:
          - type: MULTIPLIER
            params: "1024"
      - _prototype: vm.memory.available
        type: CALCULATED
        key: vm.memory.available[snmp]
        expressionFormula: last(__vm.memory.free__)+last(__vm.memory.buffers__)+last(__vm.memory.cached__)
      - _prototype: system.swap.total
        oid: 1.3.6.1.4.1.2021.4.3.0
        type: SNMP
        _snmpObject: memTotalSwap.0
        _mib: UCD-SNMP-MIB
        _vendor_description: The total amount of swap space configured for this host.
        preprocessing:
          - type: MULTIPLIER
            params: "1024"
      - _prototype: system.swap.free
        oid: 1.3.6.1.4.1.2021.4.4.0
        type: SNMP
        _snmpObject: memAvailSwap.0
        _mib: UCD-SNMP-MIB
        _vendor_description: The amount of swap space currently unused or available.
        preprocessing:
          - type: MULTIPLIER
            params: "1024"
      - _prototype: system.swap.pfree
        key: system.swap.pfree[snmp]
        type: CALCULATED

  - name: Template OS Linux VFS.DEV
    _classes:
      - SNMPv2
    _zbx_ver: "4.2"
    macros:
      - macro: "{$VFS.DEV.DEVNAME.NOT_MATCHES}"
        value: "(loop[0-9]*|sd[a-z][0-9]+|nbd[0-9]+|sr[0-9]+|fd[0-9]+)"
        _description: "This macro is used in block devices discovery. Can be overriden on the host or linked template level"
      - macro: "{$VFS.DEV.DEVNAME.MATCHES}"
        value: ".+"
        _description: "This macro is used in block devices discovery. Can be overriden on the host or linked template level"

    discovery_rules:
      - name: Block devices discovery
        key: vfs.dev.discovery[snmp]
        type: SNMP
        oid: discovery[{#DEVNAME},1.3.6.1.4.1.2021.13.15.1.1.2]
        filter:
          evaltype: AND
          conditions:
            - macro: "{#DEVNAME}"
              value: "{$VFS.DEV.DEVNAME.MATCHES}"
              operator: MATCHES_REGEX
              formulaid: A
            - macro: "{#DEVNAME}"
              value: "{$VFS.DEV.DEVNAME.NOT_MATCHES}"
              operator: MATCHES_REGEX
              formulaid: B
        items:
          - _prototype: vfs.dev.read.rate
            _resource: "{#DEVNAME}"
            application_prototype: "Disk __RESOURCE__"
            oid: 1.3.6.1.4.1.2021.13.15.1.1.5.{#SNMPINDEX}
            _snmpObject: diskIOReads.{#SNMPINDEX}
            _mib: UCD-DISKIO-MIB
            _vendor_description: The number of read accesses from this device since boot.
            units: "!r/s"
            preprocessing:
              - type: CHANGE_PER_SECOND
          - _prototype: vfs.dev.write.rate
            _resource: "{#DEVNAME}"
            application_prototype: "Disk __RESOURCE__"
            oid: 1.3.6.1.4.1.2021.13.15.1.1.6.{#SNMPINDEX}
            _snmpObject: diskIOWrites.{#SNMPINDEX}
            _mib: UCD-DISKIO-MIB
            _vendor_description: The number of write accesses from this device since boot.
            units: "!w/s"
            preprocessing:
              - type: CHANGE_PER_SECOND
          - _prototype: vfs.dev.util
            _resource: "{#DEVNAME}"
            application_prototype: "Disk __RESOURCE__"
            oid: 1.3.6.1.4.1.2021.13.15.1.1.9.{#SNMPINDEX}
            _snmpObject: diskIOLA1.{#SNMPINDEX}
            _mib: UCD-DISKIO-MIB
            _vendor_description: The 1 minute average load of disk (%)

  - name: Template OS Linux CPU
    _classes:
      - SNMPv2
    _zbx_ver: "4.2"
    discovery_rules:
      - name: CPU discovery
        type: DEPENDENT
        master_item: system.cpu.num
        key: cpu.discovery[snmp]
        description: This discovery will create set of per core CPU metrics from UCD-SNMP-MIB, using {#CPU.COUNT} in preprocessing. That's the only reason why LLD is used.
        _singleton: true
        _zbx_ver: "4.2"
        preprocessing:
          - type: JAVASCRIPT
            params: |
              //count the number of CPU cores
              return JSON.stringify([{"{#CPU.COUNT}": value, "{#SNMPINDEX}": 0, "{#SINGLETON}":""}])
        items:
          - _prototype: system.cpu.idle
            oid: 1.3.6.1.4.1.2021.11.53.0
            type: SNMP
            _snmpObject: ssCpuRawIdle.{#SNMPINDEX}
            _mib: UCD-SNMP-MIB
            preprocessing:
              - type: CHANGE_PER_SECOND
              - type: JAVASCRIPT
                params: |
                  //to get utilization in %, divide by N, where N is number of cores.
                  return value/{#CPU.COUNT}
          - _prototype: system.cpu.system
            oid: 1.3.6.1.4.1.2021.11.52.0
            type: SNMP
            _snmpObject: ssCpuRawSystem.{#SNMPINDEX}
            _mib: UCD-SNMP-MIB
            preprocessing:
              - type: CHANGE_PER_SECOND
              - type: JAVASCRIPT
                params: |
                  //to get utilization in %, divide by N, where N is number of cores.
                  return value/{#CPU.COUNT}
          - _prototype: system.cpu.user
            oid: 1.3.6.1.4.1.2021.11.50.0
            type: SNMP
            _snmpObject: ssCpuRawUser.{#SNMPINDEX}
            _mib: UCD-SNMP-MIB
            preprocessing:
              - type: CHANGE_PER_SECOND
              - type: JAVASCRIPT
                params: |
                  //to get utilization in %, divide by N, where N is number of cores.
                  return value/{#CPU.COUNT}
          - _prototype: system.cpu.steal
            oid: 1.3.6.1.4.1.2021.11.64.0
            type: SNMP
            _snmpObject: ssCpuRawSteal.{#SNMPINDEX}
            _mib: UCD-SNMP-MIB
            preprocessing:
              - type: CHANGE_PER_SECOND
              - type: JAVASCRIPT
                params: |
                  //to get utilization in %, divide by N, where N is number of cores.
                  return value/{#CPU.COUNT}
          - _prototype: system.cpu.softirq

            oid: 1.3.6.1.4.1.2021.11.61.0
            type: SNMP
            _snmpObject: ssCpuRawSoftIRQ.{#SNMPINDEX}
            _mib: UCD-SNMP-MIB
            preprocessing:
              - type: CHANGE_PER_SECOND
              - type: JAVASCRIPT
                params: |
                  //to get utilization in %, divide by N, where N is number of cores.
                  return value/{#CPU.COUNT}
          - _prototype: system.cpu.nice

            oid: 1.3.6.1.4.1.2021.11.51.0
            type: SNMP
            key: "{#CPU.COUNT}"
            _snmpObject: ssCpuRawNice.{#SNMPINDEX}
            _mib: UCD-SNMP-MIB
            preprocessing:
              - type: CHANGE_PER_SECOND
              - type: JAVASCRIPT
                params: |
                  //to get utilization in %, divide by N, where N is number of cores.
                  return value/{#CPU.COUNT}
          - _prototype: system.cpu.iowait

            oid: 1.3.6.1.4.1.2021.11.54.0
            type: SNMP
            _snmpObject: ssCpuRawWait.{#SNMPINDEX}
            _mib: UCD-SNMP-MIB
            preprocessing:
              - type: CHANGE_PER_SECOND
              - type: JAVASCRIPT
                params: |
                  //to get utilization in %, divide by N, where N is number of cores.
                  return value/{#CPU.COUNT}
          - _prototype: system.cpu.interrupt

            oid: 1.3.6.1.4.1.2021.11.56.0
            type: SNMP
            _snmpObject: ssCpuRawInterrupt.{#SNMPINDEX}
            _mib: UCD-SNMP-MIB
            preprocessing:
              - type: CHANGE_PER_SECOND
              - type: JAVASCRIPT
                params: |
                  //to get utilization in %, divide by N, where N is number of cores.
                  return value/{#CPU.COUNT}
          - _prototype: system.cpu.guest

            oid: 1.3.6.1.4.1.2021.11.65.0
            type: SNMP
            _snmpObject: ssCpuRawGuest.{#SNMPINDEX}
            _mib: UCD-SNMP-MIB
            preprocessing:
              - type: CHANGE_PER_SECOND
              - type: JAVASCRIPT
                params: |
                  //to get utilization in %, divide by N, where N is number of cores.
                  return value/{#CPU.COUNT}
          - _prototype: system.cpu.guest_nice

            oid: 1.3.6.1.4.1.2021.11.66.0
            type: SNMP
            _snmpObject: ssCpuRawGuestNice.{#SNMPINDEX}
            _mib: UCD-SNMP-MIB
            preprocessing:
              - type: CHANGE_PER_SECOND
              - type: JAVASCRIPT
                params: |
                  //to get utilization in %, divide by N, where N is number of cores.
                  return value/{#CPU.COUNT}
    items:
      - _prototype: system.cpu.load.avg1
        oid: '1.3.6.1.4.1.2021.10.1.3["index","1.3.6.1.4.1.2021.10.1.2", "Load-1"]'
        type: SNMP
        _snmpObject: laLoad.1
        _mib: UCD-SNMP-MIB
        _zbx_ver: "4.2"
      - _prototype: system.cpu.load.avg5
        oid: '1.3.6.1.4.1.2021.10.1.3["index","1.3.6.1.4.1.2021.10.1.2", "Load-5"]'
        type: SNMP
        _snmpObject: laLoad.2
        _mib: UCD-SNMP-MIB
        _zbx_ver: "4.2"
      - _prototype: system.cpu.load.avg15
        oid: '1.3.6.1.4.1.2021.10.1.3["index","1.3.6.1.4.1.2021.10.1.2", "Load-15"]'
        type: SNMP
        _snmpObject: laLoad.3
        _mib: UCD-SNMP-MIB
        _zbx_ver: "4.2"
      - _prototype: system.cpu.num
        oid: discovery[{#SNMPVALUE},1.3.6.1.2.1.25.3.3.1.1]
        type: SNMP
        key: system.cpu.num[snmp]
        _mib: HOST-RESOURCES-MIB
        _zbx_ver: "4.2"
        preprocessing:
          - type: JAVASCRIPT
            params: |
              //count the number of cores
              return JSON.parse(value).length;
        _vendor_description: Count the number of CPU cores by counting number of cores discovered in hrProcessorTable using LLD
      - _prototype: "system.cpu.intr"
        type: SNMP
        _snmpObject: ssRawInterrupts.0
        oid: 1.3.6.1.4.1.2021.11.59.0
        preprocessing:
          - type: CHANGE_PER_SECOND
      - _prototype: "system.cpu.switches"
        type: SNMP
        _snmpObject: ssRawContexts.0
        oid: 1.3.6.1.4.1.2021.11.60.0
        preprocessing:
          - type: CHANGE_PER_SECOND

  - name: Template OS Linux Filesystems
    _zbx_ver: "4.2"
    _classes:
      - SNMPv2
    macros:
      - macro: "{$VFS.FS.FSNAME.NOT_MATCHES}"
        value: "^(/dev|/sys|/run|/proc|.+/shm$)"
        _description:
          This macro is used in filesystems discovery. Can be overriden on the host
          or linked template level
      - macro: "{$VFS.FS.FSNAME.MATCHES}"
        value: ".+"
        _description:
          This macro is used in filesystems discovery. Can be overriden on the host
          or linked template level
      - macro: "{$VFS.FS.FSTYPE.NOT_MATCHES}"
        value: "^\\s$"
        _description:
          This macro is used in filesystems discovery. Can be overriden on the host
          or linked template level
      - macro: "{$VFS.FS.FSTYPE.MATCHES}"
        value: ".*(\\.4|\\.9|hrStorageFixedDisk|hrStorageFlashMemory)$"
        _description:
          This macro is used in filesystems discovery. Can be overriden on the host
          or linked template level
    discovery_rules:
      - name: Mounted filesystem discovery
        oid: "discovery[{#FSNAME},1.3.6.1.2.1.25.2.3.1.3,{#FSTYPE},1.3.6.1.2.1.25.2.3.1.2,{#ALLOC_UNITS},1.3.6.1.2.1.25.2.3.1.4]"
        key: "vfs.fs.discovery[snmp]"
        description: "HOST-RESOURCES-MIB::hrStorage discovery with storage filter"
        # https://tools.ietf.org/html/rfc2790 hrFSTypes may be used in discovery too
        filter:
          evaltype: AND
          conditions:
            - macro: "{#FSTYPE}"
              value: "{$VFS.FS.FSTYPE.MATCHES}"
              operator: MATCHES_REGEX
              formulaid: A
            - macro: "{#FSTYPE}"
              value: "{$VFS.FS.FSTYPE.NOT_MATCHES}"
              operator: NOT_MATCHES_REGEX
              formulaid: B
            - macro: "{#FSNAME}"
              value: "{$VFS.FS.FSNAME.MATCHES}"
              operator: MATCHES_REGEX
              formulaid: C
            - macro: "{#FSNAME}"
              value: "{$VFS.FS.FSNAME.NOT_MATCHES}"
              operator: NOT_MATCHES_REGEX
              formulaid: D
        items:
          - _prototype: vfs.fs.used
            oid: "1.3.6.1.2.1.25.2.3.1.6.{#SNMPINDEX}"
            _snmpObject: "hrStorageUsed.{#SNMPINDEX}"
            _mib: "HOST-RESOURCES-MIB"
            _vendor_description: "The amount of the storage represented by this entry that is allocated, in units of hrStorageAllocationUnits."
            _resource: "{#FSNAME}"
            application_prototype: Filesystem __RESOURCE__
            preprocessing:
              - type: MULTIPLIER
                params: "{#ALLOC_UNITS}"

          - _prototype: vfs.fs.total
            oid: "1.3.6.1.2.1.25.2.3.1.5.{#SNMPINDEX}"
            _snmpObject: "hrStorageSize.{#SNMPINDEX}"
            _mib: "HOST-RESOURCES-MIB"
            _vendor_description: "The size of the storage represented by this entry, in units of hrStorageAllocationUnits.\nThis object is writable to allow remote configuration of the size of the storage area in those cases where such an operation makes sense and is possible on the underlying system.\nFor example, the amount of main storage allocated to a buffer pool might be modified or the amount of disk space allocated to virtual storage might be modified."
            _resource: "{#FSNAME}"
            application_prototype: Filesystem __RESOURCE__
            preprocessing:
              - type: MULTIPLIER
                params: "{#ALLOC_UNITS}"

          - _prototype: vfs.fs.pused
            application_prototype: Filesystem __RESOURCE__
            _snmpObject: "storageUsedPercentage.{#SNMPINDEX}"
            type: CALCULATED
            _resource: "{#FSNAME}"

          - _prototype: vfs.fs.inode.pfree
            _resource: "{#FSNAME}"
            application_prototype: Filesystem __RESOURCE__
            oid: '1.3.6.1.4.1.2021.9.1.10["index","1.3.6.1.4.1.2021.9.1.2", "{#FSNAME}"]'
            type: SNMP
            _snmpObject: dskPercentNode.{#SNMPINDEX}
            _mib: UCD-SNMP-MIB
            _zbx_ver: "4.2"
            _vendor_description: If having problems collecting this item make sure access to UCD-SNMP-MIB is allowed.
            preprocessing:
              - type: JAVASCRIPT
                params: return (100-value);

  - name: Template OS Linux
    _zbx_ver: "4.2"
    description: Template OS Linux
    templates:
      - Template OS Linux CPU SNMPvX
      - Template OS Linux VFS.DEV SNMPvX
      - Template OS Linux Memory SNMPvX
      - Template OS Linux Filesystems SNMPvX
    _classes:
      - Interfaces EtherLike Extension
      - OS
      - SNMPv2
      - SNMP_DEVICE
      - INTERFACES
    _documentation:
      _setup: |
        Install snmpd agent on Linux OS, enable SNMPv2.  

        Make sure access to UCD-SNMP-MIB is allowed from Zabbix server/proxy host, since,  
        by default, snmpd (for example, in Ubuntu) limits access to basic system information only:

        ```text
        rocommunity public  default    -V systemonly
        ```

        Make sure you change that in order to read metrics of UCD-SNMP-MIB and UCD-DISKIO-MIB. Please refer to the documentation:  
        http://www.net-snmp.org/wiki/index.php/Vacm  

        You can also try to use `snmpconf`:
          
        http://www.net-snmp.org/wiki/index.php/TUT:snmpd_configuration

        Change {$SNMP_COMMUNITY} on the host level in Zabbix.
      _ref: https://docs.fedoraproject.org/en-US/Fedora/26/html/System_Administrators_Guide/sect-System_Monitoring_Tools-Net-SNMP-Retrieving.html

    screens:
      - name: System performance
        hsize: 2
        vsize: 4
        screen_items:
          - resourcetype: GRAPH
            resource:
              - name: System load
            x: 0
            y: 0
          - resourcetype: GRAPH_PROTOTYPE
            resource:
              - name: CPU usage{#SINGLETON}
            x: 1
            y: 0
          - resourcetype: GRAPH
            resource:
              - name: Memory usage
            x: 0
            y: 1
