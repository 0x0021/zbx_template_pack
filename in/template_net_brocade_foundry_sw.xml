<?xml version="1.0" encoding="UTF-8"?>
<root xmlns="http://www.example.org/zbx_template_new/"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.example.org/zbx_template_new/ ../../src/main/resources/templates/metrics.xsd">
    <!--https://www.brocade.com/content/dam/common/documents/content-types/mib-reference-guide/ipmib-may2015-reference.pdf-->

    <template>
        <classes>
            <class>SNMPv2</class>
            <class>Module</class>
        </classes>
        <name>Template Brocade_Foundry Performance</name>
        <description>Template Brocade_Foundry Performance</description>
        <sysObjectID/>
        <discoveryRules/>
        <metrics>
            <system.cpu.util>
                <oid>1.3.6.1.4.1.1991.1.1.2.1.52.0</oid>
                <snmpObject>snAgGblCpuUtil1MinAvg.0</snmpObject>
                <mib>FOUNDRY-SN-AGENT-MIB</mib>
                <vendorDescription>The statistics collection of 1 minute CPU utilization.</vendorDescription>
            </system.cpu.util>


            <vm.memory.pused>
                <oid>1.3.6.1.4.1.1991.1.1.2.1.53.0</oid>
                <snmpObject>snAgGblDynMemUtil.0</snmpObject>
                <mib>FOUNDRY-SN-AGENT-MIB</mib>
                <vendorDescription>The system dynamic memory utilization, in unit of percentage.
                    Deprecated: Refer to snAgSystemDRAMUtil.
                    For NI platforms, refer to snAgentBrdMemoryUtil100thPercent
                </vendorDescription>
            </vm.memory.pused>
        </metrics>
    </template>



    <template>
        <!-- http://www.brocade.com/en/products-services/switches/campus-network-switches/icx-6610-switch.html
            http://www.brocade.com/en/products-services/routers/mlx-series.html -->
        <!-- https://share.zabbix.com/network_devices/brocade-icx-mlx-fcx by Stefan KrÃ¼ger -->
        <classes>
            <class>Performance</class>
            <class>Fault</class>

            <class>Interfaces</class>
            <class>Network</class>
            <class>SNMP Device</class>

            <class>SNMPv2</class>
        </classes>
        <name>Template Brocade_Foundry Nonstackable</name>
        <description>Template Brocade_Foundry Nonstackable</description>
        <sysObjectID/>
        <documentation>
            <overview>For devices(old Foundry devices, MLXe and so on) that doesn't support Stackable SNMP Tables: snChasFan2Table, snChasPwrSupply2Table,snAgentTemp2Table -
                FOUNDRY-SN-AGENT-MIB::snChasFanTable, snChasPwrSupplyTable,snAgentTempTable are used instead.
                For example:
                The objects in table snChasPwrSupply2Table is not supported on the NetIron and the FastIron SX devices.
                snChasFan2Table is not supported on  on the NetIron devices.
                snAgentTemp2Table is not supported on old versions of MLXe
            </overview>
            <known_devices>
                <device>
                    <name>Brocade MLXe</name>
                    <version>(System Mode: MLX), IronWare Version V5.4.0eT163 Compiled on Oct 30 2013 at 16:40:24 labeled as V5.4.00e</version>
                </device>
                <device>
                    <name>Foundry FLS648</name>
                    <version>Foundry Networks, Inc. FLS648, IronWare Version 04.1.00bT7e1 Compiled on Feb 29 2008 at 21:35:28 labeled as FGS04100b</version>
                </device>
                <device>
                    <name>Foundry FWSX424</name>
                    <version>Foundry Networks, Inc. FWSX424, IronWare Version 02.0.00aT1e0 Compiled on Dec 10 2004 at 14:40:19 labeled as FWXS02000a</version>
                </device>
            </known_devices>
        </documentation>
        <discoveryRules>
            <discoveryRule>
                <name>PSU Discovery</name>
                <snmp_oid>discovery[{#PSU_INDEX},1.3.6.1.4.1.1991.1.1.1.2.1.1.1]</snmp_oid>
                <key>psu.discovery</key>
                <description>snChasPwrSupplyTable: A table of each power supply information. Only installed power supply appears in a table row.</description>
            </discoveryRule>

            <discoveryRule>
                <name>FAN Discovery</name>
                <snmp_oid>discovery[{#FAN_INDEX},1.3.6.1.4.1.1991.1.1.1.3.1.1.1]</snmp_oid>
                <key>fan.discovery</key>
                <description>snChasFanTable: A table of each fan information. Only installed fan appears in a table row.</description>
            </discoveryRule>
            <discoveryRule>
                <name>Temperature Discovery</name>
                <snmp_oid>discovery[{#SENSOR_DESCR},1.3.6.1.4.1.1991.1.1.2.13.1.1.3]</snmp_oid>
                <key>temp.discovery</key>
                <description>snAgentTempTable:Table to list temperatures of the modules in the device. This table is applicable to only those modules with temperature sensors.</description>
            </discoveryRule>



            <discoveryRule>
                <name>Chassis Discovery</name>
                <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.1991.1.1.1.4.1.1.1]</snmp_oid>
                <key>chassis.discovery</key>
                <description>snChasUnitIndex: The index to chassis table.</description>
            </discoveryRule>
            <discoveryRule>
                <name>Temperature Discovery Chassis</name>
                <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.1991.1.1.1.1.18]</snmp_oid>
                <key>temp.chassis.discovery</key>
                <description>Since temperature of the chassis is not available on all Brocade/Foundry hardware, this LLD is here to avoid unsupported items.</description>
            </discoveryRule>
        </discoveryRules>
        <metrics>
            <system.cpu.util>
                <imported>true</imported>
            </system.cpu.util>


            <vm.memory.pused>
                <imported>true</imported>
            </vm.memory.pused>

            <!-- FAULT metrics -->
            <sensor.temp.value>
                <oid>1.3.6.1.4.1.1991.1.1.1.1.18.{#SNMPINDEX}</oid>
                <snmpObject>snChasActualTemperature.{#SNMPINDEX}</snmpObject>
                <mib>FOUNDRY-SN-AGENT-MIB</mib>
                <vendorDescription>Temperature of the chassis. Each unit is 0.5 degrees Celcius.
                    Only management module built with temperature sensor hardware is applicable.
                    For those non-applicable management module, it returns no-such-name.</vendorDescription>
                <discoveryRule>Temperature Discovery Chassis</discoveryRule>
                <!--<alarmObject>Chassis</alarmObject>-->
                <preprocessing>
                    <step>
                        <type>multiplier</type>
                        <params>0.5</params>
                    </step>
                </preprocessing>
            </sensor.temp.value>


            <sensor.temp.value>
                <oid>1.3.6.1.4.1.1991.1.1.2.13.1.1.4.{#SNMPINDEX}</oid>
                <snmpObject>snAgentTempValue.{#SNMPINDEX}</snmpObject>
                <mib>FOUNDRY-SN-AGENT-MIB</mib>
                <vendorDescription>Temperature of the sensor represented by this row. Each unit is 0.5 degrees Celsius.</vendorDescription>
                <discoveryRule>Temperature Discovery</discoveryRule>
                <alarmObject>{#SENSOR_DESCR}</alarmObject>
                <preprocessing>
                    <step>
                        <type>multiplier</type>
                        <params>0.5</params>
                    </step>
                </preprocessing>
            </sensor.temp.value>


            <sensor.psu.status>
                <oid>.1.3.6.1.4.1.1991.1.1.1.2.1.1.3.{#SNMPINDEX}</oid>
                <snmpObject>snChasPwrSupplyOperStatus.{#SNMPINDEX}</snmpObject>
                <mib>FOUNDRY-SN-AGENT-MIB</mib>
                <discoveryRule>PSU Discovery</discoveryRule>
                <alarmObject>PSU {#PSU_INDEX}</alarmObject>
                <valueMap>FOUNDRY-SN-AGENT-MIB::snChasPwrSupplyOperStatus</valueMap>
            </sensor.psu.status>


            <sensor.fan.status>
                <oid>.1.3.6.1.4.1.1991.1.1.1.3.1.1.3.{#SNMPINDEX}</oid>
                <snmpObject>snChasFanOperStatus.{#SNMPINDEX}</snmpObject>
                <mib>FOUNDRY-SN-AGENT-MIB</mib>
                <discoveryRule>FAN Discovery</discoveryRule>
                <alarmObject>Fan {#FAN_INDEX}</alarmObject>
                <valueMap>FOUNDRY-SN-AGENT-MIB::snChasFanOperStatus</valueMap>
            </sensor.fan.status>


            <system.hw.serialnumber>
                <oid>1.3.6.1.4.1.1991.1.1.1.1.2.0</oid>
                <snmpObject>snChasSerNum.0</snmpObject>
                <mib>FOUNDRY-SN-AGENT-MIB</mib>
            </system.hw.serialnumber>
            <!-- This is not found on old Foundry unstackable devices. Not needed also
                        <system.hw.serialnumber>
                            <oid>1.3.6.1.4.1.1991.1.1.1.4.1.1.2.{#SNMPINDEX}</oid>
                            <snmpObject>snChasUnitSerNum.{#SNMPINDEX}</snmpObject>
                            <mib>FOUNDRY-SN-AGENT-MIB</mib>
                            <discoveryRule>Chassis Discovery</discoveryRule>
                            <alarmObject>Unit {#SNMPVALUE}</alarmObject>
                            <vendorDescription>The serial number of the chassis for each unit. If the serial number is unknown or unavailable then the value should be a zero length string.</vendorDescription>
                        </system.hw.serialnumber>-->

            <system.hw.firmware>
                <oid>1.3.6.1.4.1.1991.1.1.2.1.11.0</oid>
                <snmpObject>snAgImgVer.0</snmpObject>
                <mib>FOUNDRY-SN-AGENT-MIB</mib>
                <vendorDescription>The version of the running software in the form'major.minor.maintenance[letters]'</vendorDescription>
            </system.hw.firmware>
        </metrics>
        <macros>
            <macro>
                <macro>{$TEMP_CRIT}</macro>
                <value>75</value>
            </macro>
            <macro>
                <macro>{$TEMP_WARN}</macro>
                <value>65</value>
            </macro>


            <macro>
                <macro>{$PSU_CRIT_STATUS}</macro>
                <value>3</value>
            </macro>
            <macro>
                <macro>{$FAN_CRIT_STATUS}</macro>
                <value>3</value>
            </macro>
            <macro>
                <macro>{$PSU_OK_STATUS}</macro>
                <value>2</value>
            </macro>
            <macro>
                <macro>{$FAN_OK_STATUS}</macro>
                <value>2</value>
            </macro>
            <!--  1: other(1)
             2: normal(2)
             3: failure(3) -->
        </macros>
        <templates>
            <template>
                <name>Template Brocade_Foundry Performance_SNMPvX</name>
            </template>
        </templates>

    </template>


    <template>
        <!-- http://www.brocade.com/en/products-services/switches/campus-network-switches/icx-6610-switch.html
            http://www.brocade.com/en/products-services/routers/mlx-series.html -->
        <!-- https://share.zabbix.com/network_devices/brocade-icx-mlx-fcx by Stefan KrÃ¼ger -->
        <classes>
            <class>Performance</class>
            <class>Fault</class>
            <class>Inventory</class>
            <class>Interfaces</class>
            <class>Network</class>
            <class>SNMP Device</class>

            <class>SNMPv2</class>
        </classes>
        <name>Template Brocade_Foundry Stackable</name>
        <description>Template Brocade_Foundry Stackable</description>
        <sysObjectID>.1.3.6.1.4.1.1991.1.3.55.2.2</sysObjectID>
        <documentation>
            <overview>For devices(most of the IronWare Brocade devices) that support Stackable SNMP Tables in FOUNDRY-SN-AGENT-MIB: snChasFan2Table, snChasPwrSupply2Table,snAgentTemp2Table - so objects from all Stack members are provided.</overview>
            <issues>
                <issue>
                    <description>Correct fan(returns fan status as 'other(1)' and temperature (returns 0) for the non-master Switches are not available in SNMP</description>
                    <version>Version 08.0.40b and above</version>
                    <device>ICX 7750 in stack</device>
                </issue>
            </issues>
            <known_devices>
                <device>
                    <name>Brocade ICX7250-48</name>
                    <version>ICX7250-48, IronWare Version 08.0.30kT211 Compiled on Oct 18 2016 at 05:40:38 labeled as SPS08030k</version>
                </device>
                <device>
                    <name>Brocade ICX7250-48(Stacked)</name>
                    <version>Stacking System ICX7250-48, IronWare Version 08.0.30kT211 Compiled on Oct 18 2016 at 05:40:38 labeled as SPS08030k</version>
                </device>
                <device>
                    <name>Brocade ICX7450-48(Stacked)</name>
                    <version>Stacking System ICX7450-48, IronWare Version 08.0.30kT211 Compiled on Oct 18 2016 at 05:40:38 labeled as SPS08030k"</version>
                </device>
                <device>
                    <name>Brocade ICX7250-48(Stacked)</name>
                    <version>Stacking System ICX7250-48, IronWare Version 08.0.30kT211 Compiled on Oct 18 2016 at 05:40:38 labeled as SPS08030k</version>
                </device>
                <device>
                    <name>Brocade ICX7450-48F(Stacked)</name>
                    <version>Stacking System ICX7750-48F, IronWare Version 08.0.40bT203 Compiled on Oct 20 2016 at 23:48:43 labeled as SWR08040b</version>
                </device>
                <device>
                    <name>Brocade ICX 6600</name>
                    <version></version>
                </device>
            </known_devices>
        </documentation>
        <discoveryRules>
            <discoveryRule>
                <name>PSU Discovery</name>
                <snmp_oid>discovery[{#PSU_UNIT},1.3.6.1.4.1.1991.1.1.1.2.2.1.1,{#PSU_INDEX},1.3.6.1.4.1.1991.1.1.1.2.2.1.2]</snmp_oid>
                <key>psu.discovery</key>
                <description>snChasPwrSupply2Table: A table of each power supply information for each unit. Only installed power supply appears in a table row.</description>
            </discoveryRule>

            <discoveryRule>
                <name>FAN Discovery</name>
                <snmp_oid>discovery[{#FAN_UNIT},.1.3.6.1.4.1.1991.1.1.1.3.2.1.1,{#FAN_INDEX},.1.3.6.1.4.1.1991.1.1.1.3.2.1.2]</snmp_oid>
                <key>fan.discovery</key>
                <description>snChasFan2Table: A table of each fan information for each unit. Only installed fan appears in a table row.</description>
            </discoveryRule>
            <discoveryRule>
                <name>Temperature Discovery</name>
                <snmp_oid>discovery[{#SENSOR_DESCR},1.3.6.1.4.1.1991.1.1.2.13.3.1.4]</snmp_oid>
                <key>temp.discovery</key>
                <description>snAgentTemp2Table:Table to list temperatures of the modules in the device for each unit. This table is applicable to only those modules with temperature sensors.</description>
            </discoveryRule>

            <discoveryRule>
                <name>Stack Discovery</name>
                <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.1991.1.1.3.31.2.1.1.5]</snmp_oid>
                <key>stack.discovery</key>
                <description>Discovering snStackingConfigUnitTable for Model names</description>
            </discoveryRule>


            <discoveryRule>
                <name>Chassis Discovery</name>
                <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.1991.1.1.1.4.1.1.1]</snmp_oid>
                <key>chassis.discovery</key>
                <description>snChasUnitIndex: The index to chassis table.</description>
            </discoveryRule>


        </discoveryRules>
        <metrics>
            <!-- PERFORMANCE metrics -->
            <system.cpu.util>
                <imported>true</imported>
            </system.cpu.util>


            <vm.memory.pused>
                <imported>true</imported>
            </vm.memory.pused>

            <!-- FAULT metrics -->
            <sensor.temp.value>
                <oid>1.3.6.1.4.1.1991.1.1.2.13.3.1.5.{#SNMPINDEX}</oid>
                <snmpObject>snAgentTemp2Value.{#SNMPINDEX}</snmpObject>
                <mib>FOUNDRY-SN-AGENT-MIB</mib>
                <vendorDescription>Temperature of the sensor represented by this row. Each unit is 0.5 degrees Celsius.</vendorDescription>
                <discoveryRule>Temperature Discovery</discoveryRule>
                <alarmObject>{#SENSOR_DESCR}</alarmObject>
                <preprocessing>
                    <step>
                        <type>multiplier</type>
                        <params>0.5</params>
                    </step>
                </preprocessing>
            </sensor.temp.value>


            <sensor.psu.status>
                <oid>.1.3.6.1.4.1.1991.1.1.1.2.2.1.4.{#SNMPINDEX}</oid>
                <snmpObject>snChasPwrSupply2OperStatus.{#SNMPINDEX}</snmpObject>
                <mib>FOUNDRY-SN-AGENT-MIB</mib>
                <discoveryRule>PSU Discovery</discoveryRule>
                <alarmObject>Unit {#PSU_UNIT} PSU {#PSU_INDEX}</alarmObject>
                <valueMap>FOUNDRY-SN-AGENT-MIB::snChasPwrSupplyOperStatus</valueMap>
            </sensor.psu.status>


            <sensor.fan.status>
                <oid>.1.3.6.1.4.1.1991.1.1.1.3.2.1.4.{#SNMPINDEX}</oid>
                <snmpObject>snChasFan2OperStatus.{#SNMPINDEX}</snmpObject>
                <mib>FOUNDRY-SN-AGENT-MIB</mib>
                <discoveryRule>FAN Discovery</discoveryRule>
                <alarmObject>Unit {#FAN_UNIT} Fan {#FAN_INDEX}</alarmObject>
                <valueMap>FOUNDRY-SN-AGENT-MIB::snChasFanOperStatus</valueMap>
            </sensor.fan.status>

            <system.hw.model>
                <oid>.1.3.6.1.4.1.1991.1.1.3.31.2.1.1.5.{#SNMPINDEX}</oid>
                <snmpObject>snStackingConfigUnitType.{#SNMPINDEX}</snmpObject>
                <mib>FOUNDRY-SN-STACKING-MIB</mib>
                <discoveryRule>Stack Discovery</discoveryRule>
                <alarmObject>Unit {#SNMPINDEX}</alarmObject>
                <vendorDescription>A description of the configured/active system type for each unit.</vendorDescription>
            </system.hw.model>
            <!--<system.hw.serialnumber>
           <oid>1.3.6.1.4.1.1991.1.1.1.1.2.0</oid>
           <snmpObject>snChasSerNum.0</snmpObject>
           <mib>FOUNDRY-SN-AGENT-MIB</mib>
     </system.hw.serialnumber>-->
            <system.hw.serialnumber>
                <oid>1.3.6.1.4.1.1991.1.1.1.4.1.1.2.{#SNMPINDEX}</oid>
                <snmpObject>snChasUnitSerNum.{#SNMPINDEX}</snmpObject>
                <mib>FOUNDRY-SN-AGENT-MIB</mib>
                <discoveryRule>Chassis Discovery</discoveryRule>
                <alarmObject>Unit {#SNMPVALUE}</alarmObject>
                <vendorDescription>The serial number of the chassis for each unit. If the serial number is unknown or unavailable then the value should be a zero length string.</vendorDescription>
            </system.hw.serialnumber>

            <system.hw.firmware>
                <oid>1.3.6.1.4.1.1991.1.1.2.1.11.0</oid>
                <snmpObject>snAgImgVer.0</snmpObject>
                <mib>FOUNDRY-SN-AGENT-MIB</mib>
                <vendorDescription>The version of the running software in the form 'major.minor.maintenance[letters]'</vendorDescription>
            </system.hw.firmware>
        </metrics>
        <macros>
            <macro>
                <macro>{$TEMP_CRIT}</macro>
                <value>75</value>
            </macro>
            <macro>
                <macro>{$TEMP_WARN}</macro>
                <value>65</value>
            </macro>


            <macro>
                <macro>{$PSU_CRIT_STATUS}</macro>
                <value>3</value>
            </macro>
            <macro>
                <macro>{$FAN_CRIT_STATUS}</macro>
                <value>3</value>
            </macro>
            <macro>
                <macro>{$PSU_OK_STATUS}</macro>
                <value>2</value>
            </macro>
            <macro>
                <macro>{$FAN_OK_STATUS}</macro>
                <value>2</value>
            </macro>
            <!--  1: other(1)
             2: normal(2)
             3: failure(3) -->
        </macros>
        <templates>
            <template>
                <name>Template Brocade_Foundry Performance_SNMPvX</name>
            </template>

        </templates>

    </template>
    <value_maps>
        <value_map>
            <name>FOUNDRY-SN-AGENT-MIB::snChasPwrSupplyOperStatus</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>other</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>normal</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>failure</newvalue>
                </mapping>
            </mappings>
        </value_map>

        <value_map>
            <name>FOUNDRY-SN-AGENT-MIB::snChasFanOperStatus</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>other</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>normal</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>failure</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</root>
